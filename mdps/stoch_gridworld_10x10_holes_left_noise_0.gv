strict digraph  {
"(0, 3)";
"down__(0, 3)";
"(1, 3)__down__(0, 3)";
"right__(0, 3)";
"(0, 4)__right__(0, 3)";
"stay__(0, 3)";
"(0, 3)__stay__(0, 3)";
"(0, 4)";
"down__(0, 4)";
"(1, 4)__down__(0, 4)";
"left__(0, 4)";
"(0, 3)__left__(0, 4)";
"right__(0, 4)";
"(0, 5)__right__(0, 4)";
"stay__(0, 4)";
"(0, 4)__stay__(0, 4)";
"(1, 3)";
"up__(1, 3)";
"(0, 3)__up__(1, 3)";
"down__(1, 3)";
"(2, 3)__down__(1, 3)";
"right__(1, 3)";
"(1, 4)__right__(1, 3)";
"stay__(1, 3)";
"(1, 3)__stay__(1, 3)";
"(0, 5)";
"down__(0, 5)";
"(1, 5)__down__(0, 5)";
"left__(0, 5)";
"(0, 4)__left__(0, 5)";
"right__(0, 5)";
"(0, 6)__right__(0, 5)";
"stay__(0, 5)";
"(0, 5)__stay__(0, 5)";
"(1, 4)";
"up__(1, 4)";
"(0, 4)__up__(1, 4)";
"down__(1, 4)";
"(2, 4)__down__(1, 4)";
"left__(1, 4)";
"(1, 3)__left__(1, 4)";
"right__(1, 4)";
"(1, 5)__right__(1, 4)";
"stay__(1, 4)";
"(1, 4)__stay__(1, 4)";
"(2, 3)";
"up__(2, 3)";
"(1, 3)__up__(2, 3)";
"down__(2, 3)";
"(3, 3)__down__(2, 3)";
"right__(2, 3)";
"(2, 4)__right__(2, 3)";
"stay__(2, 3)";
"(2, 3)__stay__(2, 3)";
"(0, 6)";
"down__(0, 6)";
"(1, 6)__down__(0, 6)";
"left__(0, 6)";
"(0, 5)__left__(0, 6)";
"right__(0, 6)";
"(0, 7)__right__(0, 6)";
"stay__(0, 6)";
"(0, 6)__stay__(0, 6)";
"(1, 5)";
"up__(1, 5)";
"(0, 5)__up__(1, 5)";
"down__(1, 5)";
"(2, 5)__down__(1, 5)";
"left__(1, 5)";
"(1, 4)__left__(1, 5)";
"right__(1, 5)";
"(1, 6)__right__(1, 5)";
"stay__(1, 5)";
"(1, 5)__stay__(1, 5)";
"(2, 4)";
"up__(2, 4)";
"(1, 4)__up__(2, 4)";
"down__(2, 4)";
"(3, 4)__down__(2, 4)";
"left__(2, 4)";
"(2, 3)__left__(2, 4)";
"right__(2, 4)";
"(2, 5)__right__(2, 4)";
"stay__(2, 4)";
"(2, 4)__stay__(2, 4)";
"(0, 7)";
"down__(0, 7)";
"(1, 7)__down__(0, 7)";
"left__(0, 7)";
"(0, 6)__left__(0, 7)";
"right__(0, 7)";
"(0, 8)__right__(0, 7)";
"stay__(0, 7)";
"(0, 7)__stay__(0, 7)";
"(1, 6)";
"up__(1, 6)";
"(0, 6)__up__(1, 6)";
"down__(1, 6)";
"(2, 6)__down__(1, 6)";
"left__(1, 6)";
"(1, 5)__left__(1, 6)";
"right__(1, 6)";
"(1, 7)__right__(1, 6)";
"stay__(1, 6)";
"(1, 6)__stay__(1, 6)";
"(2, 5)";
"up__(2, 5)";
"(1, 5)__up__(2, 5)";
"down__(2, 5)";
"(3, 5)__down__(2, 5)";
"left__(2, 5)";
"(2, 4)__left__(2, 5)";
"right__(2, 5)";
"(2, 6)__right__(2, 5)";
"stay__(2, 5)";
"(2, 5)__stay__(2, 5)";
"(0, 8)";
"down__(0, 8)";
"(1, 8)__down__(0, 8)";
"left__(0, 8)";
"(0, 7)__left__(0, 8)";
"right__(0, 8)";
"(0, 9)__right__(0, 8)";
"stay__(0, 8)";
"(0, 8)__stay__(0, 8)";
"(1, 7)";
"up__(1, 7)";
"(0, 7)__up__(1, 7)";
"down__(1, 7)";
"(2, 7)__down__(1, 7)";
"left__(1, 7)";
"(1, 6)__left__(1, 7)";
"right__(1, 7)";
"(1, 8)__right__(1, 7)";
"stay__(1, 7)";
"(1, 7)__stay__(1, 7)";
"(2, 6)";
"up__(2, 6)";
"(1, 6)__up__(2, 6)";
"down__(2, 6)";
"(3, 6)__down__(2, 6)";
"left__(2, 6)";
"(2, 5)__left__(2, 6)";
"right__(2, 6)";
"(2, 7)__right__(2, 6)";
"stay__(2, 6)";
"(2, 6)__stay__(2, 6)";
"(0, 9)";
"down__(0, 9)";
"(1, 9)__down__(0, 9)";
"left__(0, 9)";
"(0, 8)__left__(0, 9)";
"stay__(0, 9)";
"(0, 9)__stay__(0, 9)";
"(1, 8)";
"up__(1, 8)";
"(0, 8)__up__(1, 8)";
"down__(1, 8)";
"(2, 8)__down__(1, 8)";
"left__(1, 8)";
"(1, 7)__left__(1, 8)";
"right__(1, 8)";
"(1, 9)__right__(1, 8)";
"stay__(1, 8)";
"(1, 8)__stay__(1, 8)";
"(2, 7)";
"up__(2, 7)";
"(1, 7)__up__(2, 7)";
"down__(2, 7)";
"(3, 7)__down__(2, 7)";
"left__(2, 7)";
"(2, 6)__left__(2, 7)";
"right__(2, 7)";
"(2, 8)__right__(2, 7)";
"stay__(2, 7)";
"(2, 7)__stay__(2, 7)";
"(1, 9)";
"up__(1, 9)";
"(0, 9)__up__(1, 9)";
"down__(1, 9)";
"(2, 9)__down__(1, 9)";
"left__(1, 9)";
"(1, 8)__left__(1, 9)";
"stay__(1, 9)";
"(1, 9)__stay__(1, 9)";
"(2, 8)";
"up__(2, 8)";
"(1, 8)__up__(2, 8)";
"down__(2, 8)";
"(3, 8)__down__(2, 8)";
"left__(2, 8)";
"(2, 7)__left__(2, 8)";
"right__(2, 8)";
"(2, 9)__right__(2, 8)";
"stay__(2, 8)";
"(2, 8)__stay__(2, 8)";
"(2, 9)";
"up__(2, 9)";
"(1, 9)__up__(2, 9)";
"down__(2, 9)";
"(3, 9)__down__(2, 9)";
"left__(2, 9)";
"(2, 8)__left__(2, 9)";
"stay__(2, 9)";
"(2, 9)__stay__(2, 9)";
"(3, 3)";
"up__(3, 3)";
"(2, 3)__up__(3, 3)";
"down__(3, 3)";
"(4, 3)__down__(3, 3)";
"right__(3, 3)";
"(3, 4)__right__(3, 3)";
"stay__(3, 3)";
"(3, 3)__stay__(3, 3)";
"(3, 4)";
"up__(3, 4)";
"(2, 4)__up__(3, 4)";
"down__(3, 4)";
"(4, 4)__down__(3, 4)";
"left__(3, 4)";
"(3, 3)__left__(3, 4)";
"right__(3, 4)";
"(3, 5)__right__(3, 4)";
"stay__(3, 4)";
"(3, 4)__stay__(3, 4)";
"(3, 5)";
"up__(3, 5)";
"(2, 5)__up__(3, 5)";
"down__(3, 5)";
"(4, 5)__down__(3, 5)";
"left__(3, 5)";
"(3, 4)__left__(3, 5)";
"right__(3, 5)";
"(3, 6)__right__(3, 5)";
"stay__(3, 5)";
"(3, 5)__stay__(3, 5)";
"(3, 6)";
"up__(3, 6)";
"(2, 6)__up__(3, 6)";
"down__(3, 6)";
"(4, 6)__down__(3, 6)";
"left__(3, 6)";
"(3, 5)__left__(3, 6)";
"right__(3, 6)";
"(3, 7)__right__(3, 6)";
"stay__(3, 6)";
"(3, 6)__stay__(3, 6)";
"(3, 7)";
"up__(3, 7)";
"(2, 7)__up__(3, 7)";
"down__(3, 7)";
"(4, 7)__down__(3, 7)";
"left__(3, 7)";
"(3, 6)__left__(3, 7)";
"right__(3, 7)";
"(3, 8)__right__(3, 7)";
"stay__(3, 7)";
"(3, 7)__stay__(3, 7)";
"(3, 8)";
"up__(3, 8)";
"(2, 8)__up__(3, 8)";
"down__(3, 8)";
"(4, 8)__down__(3, 8)";
"left__(3, 8)";
"(3, 7)__left__(3, 8)";
"right__(3, 8)";
"(3, 9)__right__(3, 8)";
"stay__(3, 8)";
"(3, 8)__stay__(3, 8)";
"(3, 9)";
"up__(3, 9)";
"(2, 9)__up__(3, 9)";
"down__(3, 9)";
"(4, 9)__down__(3, 9)";
"left__(3, 9)";
"(3, 8)__left__(3, 9)";
"stay__(3, 9)";
"(3, 9)__stay__(3, 9)";
"(4, 3)";
"up__(4, 3)";
"(3, 3)__up__(4, 3)";
"down__(4, 3)";
"(5, 3)__down__(4, 3)";
"left__(4, 3)";
"(4, 2)__left__(4, 3)";
"right__(4, 3)";
"(4, 4)__right__(4, 3)";
"stay__(4, 3)";
"(4, 3)__stay__(4, 3)";
"(4, 4)";
"up__(4, 4)";
"(3, 4)__up__(4, 4)";
"down__(4, 4)";
"(5, 4)__down__(4, 4)";
"left__(4, 4)";
"(4, 3)__left__(4, 4)";
"right__(4, 4)";
"(4, 5)__right__(4, 4)";
"stay__(4, 4)";
"(4, 4)__stay__(4, 4)";
"(4, 5)";
"up__(4, 5)";
"(3, 5)__up__(4, 5)";
"down__(4, 5)";
"(5, 5)__down__(4, 5)";
"left__(4, 5)";
"(4, 4)__left__(4, 5)";
"right__(4, 5)";
"(4, 6)__right__(4, 5)";
"stay__(4, 5)";
"(4, 5)__stay__(4, 5)";
"(4, 6)";
"up__(4, 6)";
"(3, 6)__up__(4, 6)";
"down__(4, 6)";
"(5, 6)__down__(4, 6)";
"left__(4, 6)";
"(4, 5)__left__(4, 6)";
"right__(4, 6)";
"(4, 7)__right__(4, 6)";
"stay__(4, 6)";
"(4, 6)__stay__(4, 6)";
"(4, 7)";
"up__(4, 7)";
"(3, 7)__up__(4, 7)";
"down__(4, 7)";
"(5, 7)__down__(4, 7)";
"left__(4, 7)";
"(4, 6)__left__(4, 7)";
"right__(4, 7)";
"(4, 8)__right__(4, 7)";
"stay__(4, 7)";
"(4, 7)__stay__(4, 7)";
"(4, 8)";
"up__(4, 8)";
"(3, 8)__up__(4, 8)";
"down__(4, 8)";
"(5, 8)__down__(4, 8)";
"left__(4, 8)";
"(4, 7)__left__(4, 8)";
"right__(4, 8)";
"(4, 9)__right__(4, 8)";
"stay__(4, 8)";
"(4, 8)__stay__(4, 8)";
"(4, 9)";
"up__(4, 9)";
"(3, 9)__up__(4, 9)";
"down__(4, 9)";
"(5, 9)__down__(4, 9)";
"left__(4, 9)";
"(4, 8)__left__(4, 9)";
"stay__(4, 9)";
"(4, 9)__stay__(4, 9)";
"(4, 0)";
"down__(4, 0)";
"(5, 0)__down__(4, 0)";
"right__(4, 0)";
"(4, 1)__right__(4, 0)";
"stay__(4, 0)";
"(4, 0)__stay__(4, 0)";
"(4, 1)";
"down__(4, 1)";
"(5, 1)__down__(4, 1)";
"left__(4, 1)";
"(4, 0)__left__(4, 1)";
"right__(4, 1)";
"(4, 2)__right__(4, 1)";
"stay__(4, 1)";
"(4, 1)__stay__(4, 1)";
"(5, 0)";
"up__(5, 0)";
"(4, 0)__up__(5, 0)";
"down__(5, 0)";
"(6, 0)__down__(5, 0)";
"right__(5, 0)";
"(5, 1)__right__(5, 0)";
"stay__(5, 0)";
"(5, 0)__stay__(5, 0)";
"(4, 2)";
"down__(4, 2)";
"(5, 2)__down__(4, 2)";
"left__(4, 2)";
"(4, 1)__left__(4, 2)";
"right__(4, 2)";
"(4, 3)__right__(4, 2)";
"stay__(4, 2)";
"(4, 2)__stay__(4, 2)";
"(5, 1)";
"up__(5, 1)";
"(4, 1)__up__(5, 1)";
"down__(5, 1)";
"(6, 1)__down__(5, 1)";
"left__(5, 1)";
"(5, 0)__left__(5, 1)";
"right__(5, 1)";
"(5, 2)__right__(5, 1)";
"stay__(5, 1)";
"(5, 1)__stay__(5, 1)";
"(5, 2)";
"up__(5, 2)";
"(4, 2)__up__(5, 2)";
"down__(5, 2)";
"(6, 2)__down__(5, 2)";
"left__(5, 2)";
"(5, 1)__left__(5, 2)";
"right__(5, 2)";
"(5, 3)__right__(5, 2)";
"stay__(5, 2)";
"(5, 2)__stay__(5, 2)";
"(5, 3)";
"up__(5, 3)";
"(4, 3)__up__(5, 3)";
"down__(5, 3)";
"(6, 3)__down__(5, 3)";
"left__(5, 3)";
"(5, 2)__left__(5, 3)";
"right__(5, 3)";
"(5, 4)__right__(5, 3)";
"stay__(5, 3)";
"(5, 3)__stay__(5, 3)";
"(5, 4)";
"up__(5, 4)";
"(4, 4)__up__(5, 4)";
"left__(5, 4)";
"(5, 3)__left__(5, 4)";
"right__(5, 4)";
"(5, 5)__right__(5, 4)";
"stay__(5, 4)";
"(5, 4)__stay__(5, 4)";
"(5, 5)";
"up__(5, 5)";
"(4, 5)__up__(5, 5)";
"left__(5, 5)";
"(5, 4)__left__(5, 5)";
"right__(5, 5)";
"(5, 6)__right__(5, 5)";
"stay__(5, 5)";
"(5, 5)__stay__(5, 5)";
"(5, 6)";
"up__(5, 6)";
"(4, 6)__up__(5, 6)";
"left__(5, 6)";
"(5, 5)__left__(5, 6)";
"right__(5, 6)";
"(5, 7)__right__(5, 6)";
"stay__(5, 6)";
"(5, 6)__stay__(5, 6)";
"(5, 7)";
"up__(5, 7)";
"(4, 7)__up__(5, 7)";
"left__(5, 7)";
"(5, 6)__left__(5, 7)";
"right__(5, 7)";
"(5, 8)__right__(5, 7)";
"stay__(5, 7)";
"(5, 7)__stay__(5, 7)";
"(5, 8)";
"up__(5, 8)";
"(4, 8)__up__(5, 8)";
"down__(5, 8)";
"(6, 8)__down__(5, 8)";
"left__(5, 8)";
"(5, 7)__left__(5, 8)";
"right__(5, 8)";
"(5, 9)__right__(5, 8)";
"stay__(5, 8)";
"(5, 8)__stay__(5, 8)";
"(5, 9)";
"up__(5, 9)";
"(4, 9)__up__(5, 9)";
"down__(5, 9)";
"(6, 9)__down__(5, 9)";
"left__(5, 9)";
"(5, 8)__left__(5, 9)";
"stay__(5, 9)";
"(5, 9)__stay__(5, 9)";
"(6, 0)";
"up__(6, 0)";
"(5, 0)__up__(6, 0)";
"down__(6, 0)";
"(7, 0)__down__(6, 0)";
"right__(6, 0)";
"(6, 1)__right__(6, 0)";
"stay__(6, 0)";
"(6, 0)__stay__(6, 0)";
"(6, 1)";
"up__(6, 1)";
"(5, 1)__up__(6, 1)";
"down__(6, 1)";
"(7, 1)__down__(6, 1)";
"left__(6, 1)";
"(6, 0)__left__(6, 1)";
"right__(6, 1)";
"(6, 2)__right__(6, 1)";
"stay__(6, 1)";
"(6, 1)__stay__(6, 1)";
"(6, 2)";
"up__(6, 2)";
"(5, 2)__up__(6, 2)";
"down__(6, 2)";
"(7, 2)__down__(6, 2)";
"left__(6, 2)";
"(6, 1)__left__(6, 2)";
"right__(6, 2)";
"(6, 3)__right__(6, 2)";
"stay__(6, 2)";
"(6, 2)__stay__(6, 2)";
"(6, 3)";
"up__(6, 3)";
"(5, 3)__up__(6, 3)";
"down__(6, 3)";
"(7, 3)__down__(6, 3)";
"left__(6, 3)";
"(6, 2)__left__(6, 3)";
"stay__(6, 3)";
"(6, 3)__stay__(6, 3)";
"(6, 8)";
"up__(6, 8)";
"(5, 8)__up__(6, 8)";
"down__(6, 8)";
"(7, 8)__down__(6, 8)";
"right__(6, 8)";
"(6, 9)__right__(6, 8)";
"stay__(6, 8)";
"(6, 8)__stay__(6, 8)";
"(6, 9)";
"up__(6, 9)";
"(5, 9)__up__(6, 9)";
"down__(6, 9)";
"(7, 9)__down__(6, 9)";
"left__(6, 9)";
"(6, 8)__left__(6, 9)";
"stay__(6, 9)";
"(6, 9)__stay__(6, 9)";
"(7, 0)";
"up__(7, 0)";
"(6, 0)__up__(7, 0)";
"down__(7, 0)";
"(8, 0)__down__(7, 0)";
"right__(7, 0)";
"(7, 1)__right__(7, 0)";
"stay__(7, 0)";
"(7, 0)__stay__(7, 0)";
"(7, 1)";
"up__(7, 1)";
"(6, 1)__up__(7, 1)";
"down__(7, 1)";
"(8, 1)__down__(7, 1)";
"left__(7, 1)";
"(7, 0)__left__(7, 1)";
"right__(7, 1)";
"(7, 2)__right__(7, 1)";
"stay__(7, 1)";
"(7, 1)__stay__(7, 1)";
"(7, 2)";
"up__(7, 2)";
"(6, 2)__up__(7, 2)";
"down__(7, 2)";
"(8, 2)__down__(7, 2)";
"left__(7, 2)";
"(7, 1)__left__(7, 2)";
"right__(7, 2)";
"(7, 3)__right__(7, 2)";
"stay__(7, 2)";
"(7, 2)__stay__(7, 2)";
"(7, 3)";
"up__(7, 3)";
"(6, 3)__up__(7, 3)";
"down__(7, 3)";
"(8, 3)__down__(7, 3)";
"left__(7, 3)";
"(7, 2)__left__(7, 3)";
"stay__(7, 3)";
"(7, 3)__stay__(7, 3)";
"(7, 8)";
"up__(7, 8)";
"(6, 8)__up__(7, 8)";
"down__(7, 8)";
"(8, 8)__down__(7, 8)";
"right__(7, 8)";
"(7, 9)__right__(7, 8)";
"stay__(7, 8)";
"(7, 8)__stay__(7, 8)";
"(7, 9)";
"up__(7, 9)";
"(6, 9)__up__(7, 9)";
"down__(7, 9)";
"(8, 9)__down__(7, 9)";
"left__(7, 9)";
"(7, 8)__left__(7, 9)";
"stay__(7, 9)";
"(7, 9)__stay__(7, 9)";
"(8, 0)";
"up__(8, 0)";
"(7, 0)__up__(8, 0)";
"down__(8, 0)";
"(9, 0)__down__(8, 0)";
"right__(8, 0)";
"(8, 1)__right__(8, 0)";
"stay__(8, 0)";
"(8, 0)__stay__(8, 0)";
"(8, 1)";
"up__(8, 1)";
"(7, 1)__up__(8, 1)";
"down__(8, 1)";
"(9, 1)__down__(8, 1)";
"left__(8, 1)";
"(8, 0)__left__(8, 1)";
"right__(8, 1)";
"(8, 2)__right__(8, 1)";
"stay__(8, 1)";
"(8, 1)__stay__(8, 1)";
"(8, 2)";
"up__(8, 2)";
"(7, 2)__up__(8, 2)";
"down__(8, 2)";
"(9, 2)__down__(8, 2)";
"left__(8, 2)";
"(8, 1)__left__(8, 2)";
"right__(8, 2)";
"(8, 3)__right__(8, 2)";
"stay__(8, 2)";
"(8, 2)__stay__(8, 2)";
"(8, 3)";
"up__(8, 3)";
"(7, 3)__up__(8, 3)";
"down__(8, 3)";
"(9, 3)__down__(8, 3)";
"left__(8, 3)";
"(8, 2)__left__(8, 3)";
"stay__(8, 3)";
"(8, 3)__stay__(8, 3)";
"(8, 8)";
"up__(8, 8)";
"(7, 8)__up__(8, 8)";
"down__(8, 8)";
"(9, 8)__down__(8, 8)";
"right__(8, 8)";
"(8, 9)__right__(8, 8)";
"stay__(8, 8)";
"(8, 8)__stay__(8, 8)";
"(8, 9)";
"up__(8, 9)";
"(7, 9)__up__(8, 9)";
"down__(8, 9)";
"(9, 9)__down__(8, 9)";
"left__(8, 9)";
"(8, 8)__left__(8, 9)";
"stay__(8, 9)";
"(8, 9)__stay__(8, 9)";
"(9, 0)";
"up__(9, 0)";
"(8, 0)__up__(9, 0)";
"right__(9, 0)";
"(9, 1)__right__(9, 0)";
"stay__(9, 0)";
"(9, 0)__stay__(9, 0)";
"(9, 1)";
"up__(9, 1)";
"(8, 1)__up__(9, 1)";
"left__(9, 1)";
"(9, 0)__left__(9, 1)";
"right__(9, 1)";
"(9, 2)__right__(9, 1)";
"stay__(9, 1)";
"(9, 1)__stay__(9, 1)";
"(9, 2)";
"up__(9, 2)";
"(8, 2)__up__(9, 2)";
"left__(9, 2)";
"(9, 1)__left__(9, 2)";
"right__(9, 2)";
"(9, 3)__right__(9, 2)";
"stay__(9, 2)";
"(9, 2)__stay__(9, 2)";
"(9, 3)";
"up__(9, 3)";
"(8, 3)__up__(9, 3)";
"left__(9, 3)";
"(9, 2)__left__(9, 3)";
"right__(9, 3)";
"(9, 4)__right__(9, 3)";
"stay__(9, 3)";
"(9, 3)__stay__(9, 3)";
"(9, 8)";
"up__(9, 8)";
"(8, 8)__up__(9, 8)";
"left__(9, 8)";
"(9, 7)__left__(9, 8)";
"right__(9, 8)";
"(9, 9)__right__(9, 8)";
"stay__(9, 8)";
"(9, 8)__stay__(9, 8)";
"(9, 9)";
"up__(9, 9)";
"(8, 9)__up__(9, 9)";
"left__(9, 9)";
"(9, 8)__left__(9, 9)";
"stay__(9, 9)";
"(9, 9)__stay__(9, 9)";
"(9, 4)";
"left__(9, 4)";
"(9, 3)__left__(9, 4)";
"right__(9, 4)";
"(9, 5)__right__(9, 4)";
"stay__(9, 4)";
"(9, 4)__stay__(9, 4)";
"(9, 5)";
"left__(9, 5)";
"(9, 4)__left__(9, 5)";
"right__(9, 5)";
"(9, 6)__right__(9, 5)";
"stay__(9, 5)";
"(9, 5)__stay__(9, 5)";
"(9, 6)";
"left__(9, 6)";
"(9, 5)__left__(9, 6)";
"right__(9, 6)";
"(9, 7)__right__(9, 6)";
"stay__(9, 6)";
"(9, 6)__stay__(9, 6)";
"(9, 7)";
"left__(9, 7)";
"(9, 6)__left__(9, 7)";
"right__(9, 7)";
"(9, 8)__right__(9, 7)";
"stay__(9, 7)";
"(9, 7)__stay__(9, 7)";
"(0, 3)" -> "down__(0, 3)";
"(0, 3)" -> "right__(0, 3)";
"(0, 3)" -> "stay__(0, 3)";
"down__(0, 3)" -> "(1, 3)__down__(0, 3)"  [weight="1.0"];
"right__(0, 3)" -> "(0, 4)__right__(0, 3)"  [weight="1.0"];
"stay__(0, 3)" -> "(0, 3)__stay__(0, 3)"  [weight=1];
"(0, 4)" -> "down__(0, 4)";
"(0, 4)" -> "left__(0, 4)";
"(0, 4)" -> "right__(0, 4)";
"(0, 4)" -> "stay__(0, 4)";
"down__(0, 4)" -> "(1, 4)__down__(0, 4)"  [weight="1.0"];
"left__(0, 4)" -> "(0, 3)__left__(0, 4)"  [weight=1];
"right__(0, 4)" -> "(0, 5)__right__(0, 4)"  [weight="1.0"];
"stay__(0, 4)" -> "(0, 4)__stay__(0, 4)"  [weight="1.0"];
"(1, 3)" -> "up__(1, 3)";
"(1, 3)" -> "down__(1, 3)";
"(1, 3)" -> "right__(1, 3)";
"(1, 3)" -> "stay__(1, 3)";
"up__(1, 3)" -> "(0, 3)__up__(1, 3)"  [weight="1.0"];
"down__(1, 3)" -> "(2, 3)__down__(1, 3)"  [weight="1.0"];
"right__(1, 3)" -> "(1, 4)__right__(1, 3)"  [weight="1.0"];
"stay__(1, 3)" -> "(1, 3)__stay__(1, 3)"  [weight=1];
"(0, 5)" -> "down__(0, 5)";
"(0, 5)" -> "left__(0, 5)";
"(0, 5)" -> "right__(0, 5)";
"(0, 5)" -> "stay__(0, 5)";
"down__(0, 5)" -> "(1, 5)__down__(0, 5)"  [weight="1.0"];
"left__(0, 5)" -> "(0, 4)__left__(0, 5)"  [weight=1];
"right__(0, 5)" -> "(0, 6)__right__(0, 5)"  [weight="1.0"];
"stay__(0, 5)" -> "(0, 5)__stay__(0, 5)"  [weight="1.0"];
"(1, 4)" -> "up__(1, 4)";
"(1, 4)" -> "down__(1, 4)";
"(1, 4)" -> "left__(1, 4)";
"(1, 4)" -> "right__(1, 4)";
"(1, 4)" -> "stay__(1, 4)";
"up__(1, 4)" -> "(0, 4)__up__(1, 4)"  [weight="1.0"];
"down__(1, 4)" -> "(2, 4)__down__(1, 4)"  [weight="1.0"];
"left__(1, 4)" -> "(1, 3)__left__(1, 4)"  [weight=1];
"right__(1, 4)" -> "(1, 5)__right__(1, 4)"  [weight="1.0"];
"stay__(1, 4)" -> "(1, 4)__stay__(1, 4)"  [weight="1.0"];
"(2, 3)" -> "up__(2, 3)";
"(2, 3)" -> "down__(2, 3)";
"(2, 3)" -> "right__(2, 3)";
"(2, 3)" -> "stay__(2, 3)";
"up__(2, 3)" -> "(1, 3)__up__(2, 3)"  [weight="1.0"];
"down__(2, 3)" -> "(3, 3)__down__(2, 3)"  [weight="1.0"];
"right__(2, 3)" -> "(2, 4)__right__(2, 3)"  [weight="1.0"];
"stay__(2, 3)" -> "(2, 3)__stay__(2, 3)"  [weight=1];
"(0, 6)" -> "down__(0, 6)";
"(0, 6)" -> "left__(0, 6)";
"(0, 6)" -> "right__(0, 6)";
"(0, 6)" -> "stay__(0, 6)";
"down__(0, 6)" -> "(1, 6)__down__(0, 6)"  [weight="1.0"];
"left__(0, 6)" -> "(0, 5)__left__(0, 6)"  [weight=1];
"right__(0, 6)" -> "(0, 7)__right__(0, 6)"  [weight="1.0"];
"stay__(0, 6)" -> "(0, 6)__stay__(0, 6)"  [weight="1.0"];
"(1, 5)" -> "up__(1, 5)";
"(1, 5)" -> "down__(1, 5)";
"(1, 5)" -> "left__(1, 5)";
"(1, 5)" -> "right__(1, 5)";
"(1, 5)" -> "stay__(1, 5)";
"up__(1, 5)" -> "(0, 5)__up__(1, 5)"  [weight="1.0"];
"down__(1, 5)" -> "(2, 5)__down__(1, 5)"  [weight="1.0"];
"left__(1, 5)" -> "(1, 4)__left__(1, 5)"  [weight=1];
"right__(1, 5)" -> "(1, 6)__right__(1, 5)"  [weight="1.0"];
"stay__(1, 5)" -> "(1, 5)__stay__(1, 5)"  [weight="1.0"];
"(2, 4)" -> "up__(2, 4)";
"(2, 4)" -> "down__(2, 4)";
"(2, 4)" -> "left__(2, 4)";
"(2, 4)" -> "right__(2, 4)";
"(2, 4)" -> "stay__(2, 4)";
"up__(2, 4)" -> "(1, 4)__up__(2, 4)"  [weight="1.0"];
"down__(2, 4)" -> "(3, 4)__down__(2, 4)"  [weight="1.0"];
"left__(2, 4)" -> "(2, 3)__left__(2, 4)"  [weight=1];
"right__(2, 4)" -> "(2, 5)__right__(2, 4)"  [weight="1.0"];
"stay__(2, 4)" -> "(2, 4)__stay__(2, 4)"  [weight="1.0"];
"(0, 7)" -> "down__(0, 7)";
"(0, 7)" -> "left__(0, 7)";
"(0, 7)" -> "right__(0, 7)";
"(0, 7)" -> "stay__(0, 7)";
"down__(0, 7)" -> "(1, 7)__down__(0, 7)"  [weight="1.0"];
"left__(0, 7)" -> "(0, 6)__left__(0, 7)"  [weight=1];
"right__(0, 7)" -> "(0, 8)__right__(0, 7)"  [weight="1.0"];
"stay__(0, 7)" -> "(0, 7)__stay__(0, 7)"  [weight="1.0"];
"(1, 6)" -> "up__(1, 6)";
"(1, 6)" -> "down__(1, 6)";
"(1, 6)" -> "left__(1, 6)";
"(1, 6)" -> "right__(1, 6)";
"(1, 6)" -> "stay__(1, 6)";
"up__(1, 6)" -> "(0, 6)__up__(1, 6)"  [weight="1.0"];
"down__(1, 6)" -> "(2, 6)__down__(1, 6)"  [weight="1.0"];
"left__(1, 6)" -> "(1, 5)__left__(1, 6)"  [weight=1];
"right__(1, 6)" -> "(1, 7)__right__(1, 6)"  [weight="1.0"];
"stay__(1, 6)" -> "(1, 6)__stay__(1, 6)"  [weight="1.0"];
"(2, 5)" -> "up__(2, 5)";
"(2, 5)" -> "down__(2, 5)";
"(2, 5)" -> "left__(2, 5)";
"(2, 5)" -> "right__(2, 5)";
"(2, 5)" -> "stay__(2, 5)";
"up__(2, 5)" -> "(1, 5)__up__(2, 5)"  [weight="1.0"];
"down__(2, 5)" -> "(3, 5)__down__(2, 5)"  [weight="1.0"];
"left__(2, 5)" -> "(2, 4)__left__(2, 5)"  [weight=1];
"right__(2, 5)" -> "(2, 6)__right__(2, 5)"  [weight="1.0"];
"stay__(2, 5)" -> "(2, 5)__stay__(2, 5)"  [weight="1.0"];
"(0, 8)" -> "down__(0, 8)";
"(0, 8)" -> "left__(0, 8)";
"(0, 8)" -> "right__(0, 8)";
"(0, 8)" -> "stay__(0, 8)";
"down__(0, 8)" -> "(1, 8)__down__(0, 8)"  [weight="1.0"];
"left__(0, 8)" -> "(0, 7)__left__(0, 8)"  [weight=1];
"right__(0, 8)" -> "(0, 9)__right__(0, 8)"  [weight="1.0"];
"stay__(0, 8)" -> "(0, 8)__stay__(0, 8)"  [weight="1.0"];
"(1, 7)" -> "up__(1, 7)";
"(1, 7)" -> "down__(1, 7)";
"(1, 7)" -> "left__(1, 7)";
"(1, 7)" -> "right__(1, 7)";
"(1, 7)" -> "stay__(1, 7)";
"up__(1, 7)" -> "(0, 7)__up__(1, 7)"  [weight="1.0"];
"down__(1, 7)" -> "(2, 7)__down__(1, 7)"  [weight="1.0"];
"left__(1, 7)" -> "(1, 6)__left__(1, 7)"  [weight=1];
"right__(1, 7)" -> "(1, 8)__right__(1, 7)"  [weight="1.0"];
"stay__(1, 7)" -> "(1, 7)__stay__(1, 7)"  [weight="1.0"];
"(2, 6)" -> "up__(2, 6)";
"(2, 6)" -> "down__(2, 6)";
"(2, 6)" -> "left__(2, 6)";
"(2, 6)" -> "right__(2, 6)";
"(2, 6)" -> "stay__(2, 6)";
"up__(2, 6)" -> "(1, 6)__up__(2, 6)"  [weight="1.0"];
"down__(2, 6)" -> "(3, 6)__down__(2, 6)"  [weight="1.0"];
"left__(2, 6)" -> "(2, 5)__left__(2, 6)"  [weight=1];
"right__(2, 6)" -> "(2, 7)__right__(2, 6)"  [weight="1.0"];
"stay__(2, 6)" -> "(2, 6)__stay__(2, 6)"  [weight="1.0"];
"(0, 9)" -> "down__(0, 9)";
"(0, 9)" -> "left__(0, 9)";
"(0, 9)" -> "stay__(0, 9)";
"down__(0, 9)" -> "(1, 9)__down__(0, 9)"  [weight="1.0"];
"left__(0, 9)" -> "(0, 8)__left__(0, 9)"  [weight=1];
"stay__(0, 9)" -> "(0, 9)__stay__(0, 9)"  [weight="1.0"];
"(1, 8)" -> "up__(1, 8)";
"(1, 8)" -> "down__(1, 8)";
"(1, 8)" -> "left__(1, 8)";
"(1, 8)" -> "right__(1, 8)";
"(1, 8)" -> "stay__(1, 8)";
"up__(1, 8)" -> "(0, 8)__up__(1, 8)"  [weight="1.0"];
"down__(1, 8)" -> "(2, 8)__down__(1, 8)"  [weight="1.0"];
"left__(1, 8)" -> "(1, 7)__left__(1, 8)"  [weight=1];
"right__(1, 8)" -> "(1, 9)__right__(1, 8)"  [weight="1.0"];
"stay__(1, 8)" -> "(1, 8)__stay__(1, 8)"  [weight="1.0"];
"(2, 7)" -> "up__(2, 7)";
"(2, 7)" -> "down__(2, 7)";
"(2, 7)" -> "left__(2, 7)";
"(2, 7)" -> "right__(2, 7)";
"(2, 7)" -> "stay__(2, 7)";
"up__(2, 7)" -> "(1, 7)__up__(2, 7)"  [weight="1.0"];
"down__(2, 7)" -> "(3, 7)__down__(2, 7)"  [weight="1.0"];
"left__(2, 7)" -> "(2, 6)__left__(2, 7)"  [weight=1];
"right__(2, 7)" -> "(2, 8)__right__(2, 7)"  [weight="1.0"];
"stay__(2, 7)" -> "(2, 7)__stay__(2, 7)"  [weight="1.0"];
"(1, 9)" -> "up__(1, 9)";
"(1, 9)" -> "down__(1, 9)";
"(1, 9)" -> "left__(1, 9)";
"(1, 9)" -> "stay__(1, 9)";
"up__(1, 9)" -> "(0, 9)__up__(1, 9)"  [weight="1.0"];
"down__(1, 9)" -> "(2, 9)__down__(1, 9)"  [weight="1.0"];
"left__(1, 9)" -> "(1, 8)__left__(1, 9)"  [weight=1];
"stay__(1, 9)" -> "(1, 9)__stay__(1, 9)"  [weight="1.0"];
"(2, 8)" -> "up__(2, 8)";
"(2, 8)" -> "down__(2, 8)";
"(2, 8)" -> "left__(2, 8)";
"(2, 8)" -> "right__(2, 8)";
"(2, 8)" -> "stay__(2, 8)";
"up__(2, 8)" -> "(1, 8)__up__(2, 8)"  [weight="1.0"];
"down__(2, 8)" -> "(3, 8)__down__(2, 8)"  [weight="1.0"];
"left__(2, 8)" -> "(2, 7)__left__(2, 8)"  [weight=1];
"right__(2, 8)" -> "(2, 9)__right__(2, 8)"  [weight="1.0"];
"stay__(2, 8)" -> "(2, 8)__stay__(2, 8)"  [weight="1.0"];
"(2, 9)" -> "up__(2, 9)";
"(2, 9)" -> "down__(2, 9)";
"(2, 9)" -> "left__(2, 9)";
"(2, 9)" -> "stay__(2, 9)";
"up__(2, 9)" -> "(1, 9)__up__(2, 9)"  [weight="1.0"];
"down__(2, 9)" -> "(3, 9)__down__(2, 9)"  [weight="1.0"];
"left__(2, 9)" -> "(2, 8)__left__(2, 9)"  [weight=1];
"stay__(2, 9)" -> "(2, 9)__stay__(2, 9)"  [weight="1.0"];
"(3, 3)" -> "up__(3, 3)";
"(3, 3)" -> "down__(3, 3)";
"(3, 3)" -> "right__(3, 3)";
"(3, 3)" -> "stay__(3, 3)";
"up__(3, 3)" -> "(2, 3)__up__(3, 3)"  [weight="1.0"];
"down__(3, 3)" -> "(4, 3)__down__(3, 3)"  [weight="1.0"];
"right__(3, 3)" -> "(3, 4)__right__(3, 3)"  [weight="1.0"];
"stay__(3, 3)" -> "(3, 3)__stay__(3, 3)"  [weight=1];
"(3, 4)" -> "up__(3, 4)";
"(3, 4)" -> "down__(3, 4)";
"(3, 4)" -> "left__(3, 4)";
"(3, 4)" -> "right__(3, 4)";
"(3, 4)" -> "stay__(3, 4)";
"up__(3, 4)" -> "(2, 4)__up__(3, 4)"  [weight="1.0"];
"down__(3, 4)" -> "(4, 4)__down__(3, 4)"  [weight="1.0"];
"left__(3, 4)" -> "(3, 3)__left__(3, 4)"  [weight=1];
"right__(3, 4)" -> "(3, 5)__right__(3, 4)"  [weight="1.0"];
"stay__(3, 4)" -> "(3, 4)__stay__(3, 4)"  [weight="1.0"];
"(3, 5)" -> "up__(3, 5)";
"(3, 5)" -> "down__(3, 5)";
"(3, 5)" -> "left__(3, 5)";
"(3, 5)" -> "right__(3, 5)";
"(3, 5)" -> "stay__(3, 5)";
"up__(3, 5)" -> "(2, 5)__up__(3, 5)"  [weight="1.0"];
"down__(3, 5)" -> "(4, 5)__down__(3, 5)"  [weight="1.0"];
"left__(3, 5)" -> "(3, 4)__left__(3, 5)"  [weight=1];
"right__(3, 5)" -> "(3, 6)__right__(3, 5)"  [weight="1.0"];
"stay__(3, 5)" -> "(3, 5)__stay__(3, 5)"  [weight="1.0"];
"(3, 6)" -> "up__(3, 6)";
"(3, 6)" -> "down__(3, 6)";
"(3, 6)" -> "left__(3, 6)";
"(3, 6)" -> "right__(3, 6)";
"(3, 6)" -> "stay__(3, 6)";
"up__(3, 6)" -> "(2, 6)__up__(3, 6)"  [weight="1.0"];
"down__(3, 6)" -> "(4, 6)__down__(3, 6)"  [weight="1.0"];
"left__(3, 6)" -> "(3, 5)__left__(3, 6)"  [weight=1];
"right__(3, 6)" -> "(3, 7)__right__(3, 6)"  [weight="1.0"];
"stay__(3, 6)" -> "(3, 6)__stay__(3, 6)"  [weight="1.0"];
"(3, 7)" -> "up__(3, 7)";
"(3, 7)" -> "down__(3, 7)";
"(3, 7)" -> "left__(3, 7)";
"(3, 7)" -> "right__(3, 7)";
"(3, 7)" -> "stay__(3, 7)";
"up__(3, 7)" -> "(2, 7)__up__(3, 7)"  [weight="1.0"];
"down__(3, 7)" -> "(4, 7)__down__(3, 7)"  [weight="1.0"];
"left__(3, 7)" -> "(3, 6)__left__(3, 7)"  [weight=1];
"right__(3, 7)" -> "(3, 8)__right__(3, 7)"  [weight="1.0"];
"stay__(3, 7)" -> "(3, 7)__stay__(3, 7)"  [weight="1.0"];
"(3, 8)" -> "up__(3, 8)";
"(3, 8)" -> "down__(3, 8)";
"(3, 8)" -> "left__(3, 8)";
"(3, 8)" -> "right__(3, 8)";
"(3, 8)" -> "stay__(3, 8)";
"up__(3, 8)" -> "(2, 8)__up__(3, 8)"  [weight="1.0"];
"down__(3, 8)" -> "(4, 8)__down__(3, 8)"  [weight="1.0"];
"left__(3, 8)" -> "(3, 7)__left__(3, 8)"  [weight=1];
"right__(3, 8)" -> "(3, 9)__right__(3, 8)"  [weight="1.0"];
"stay__(3, 8)" -> "(3, 8)__stay__(3, 8)"  [weight="1.0"];
"(3, 9)" -> "up__(3, 9)";
"(3, 9)" -> "down__(3, 9)";
"(3, 9)" -> "left__(3, 9)";
"(3, 9)" -> "stay__(3, 9)";
"up__(3, 9)" -> "(2, 9)__up__(3, 9)"  [weight="1.0"];
"down__(3, 9)" -> "(4, 9)__down__(3, 9)"  [weight="1.0"];
"left__(3, 9)" -> "(3, 8)__left__(3, 9)"  [weight=1];
"stay__(3, 9)" -> "(3, 9)__stay__(3, 9)"  [weight="1.0"];
"(4, 3)" -> "up__(4, 3)";
"(4, 3)" -> "down__(4, 3)";
"(4, 3)" -> "left__(4, 3)";
"(4, 3)" -> "right__(4, 3)";
"(4, 3)" -> "stay__(4, 3)";
"up__(4, 3)" -> "(3, 3)__up__(4, 3)"  [weight="1.0"];
"down__(4, 3)" -> "(5, 3)__down__(4, 3)"  [weight="1.0"];
"left__(4, 3)" -> "(4, 2)__left__(4, 3)"  [weight=1];
"right__(4, 3)" -> "(4, 4)__right__(4, 3)"  [weight="1.0"];
"stay__(4, 3)" -> "(4, 3)__stay__(4, 3)"  [weight="1.0"];
"(4, 4)" -> "up__(4, 4)";
"(4, 4)" -> "down__(4, 4)";
"(4, 4)" -> "left__(4, 4)";
"(4, 4)" -> "right__(4, 4)";
"(4, 4)" -> "stay__(4, 4)";
"up__(4, 4)" -> "(3, 4)__up__(4, 4)"  [weight="1.0"];
"down__(4, 4)" -> "(5, 4)__down__(4, 4)"  [weight="1.0"];
"left__(4, 4)" -> "(4, 3)__left__(4, 4)"  [weight=1];
"right__(4, 4)" -> "(4, 5)__right__(4, 4)"  [weight="1.0"];
"stay__(4, 4)" -> "(4, 4)__stay__(4, 4)"  [weight="1.0"];
"(4, 5)" -> "up__(4, 5)";
"(4, 5)" -> "down__(4, 5)";
"(4, 5)" -> "left__(4, 5)";
"(4, 5)" -> "right__(4, 5)";
"(4, 5)" -> "stay__(4, 5)";
"up__(4, 5)" -> "(3, 5)__up__(4, 5)"  [weight="1.0"];
"down__(4, 5)" -> "(5, 5)__down__(4, 5)"  [weight="1.0"];
"left__(4, 5)" -> "(4, 4)__left__(4, 5)"  [weight=1];
"right__(4, 5)" -> "(4, 6)__right__(4, 5)"  [weight="1.0"];
"stay__(4, 5)" -> "(4, 5)__stay__(4, 5)"  [weight="1.0"];
"(4, 6)" -> "up__(4, 6)";
"(4, 6)" -> "down__(4, 6)";
"(4, 6)" -> "left__(4, 6)";
"(4, 6)" -> "right__(4, 6)";
"(4, 6)" -> "stay__(4, 6)";
"up__(4, 6)" -> "(3, 6)__up__(4, 6)"  [weight="1.0"];
"down__(4, 6)" -> "(5, 6)__down__(4, 6)"  [weight="1.0"];
"left__(4, 6)" -> "(4, 5)__left__(4, 6)"  [weight=1];
"right__(4, 6)" -> "(4, 7)__right__(4, 6)"  [weight="1.0"];
"stay__(4, 6)" -> "(4, 6)__stay__(4, 6)"  [weight="1.0"];
"(4, 7)" -> "up__(4, 7)";
"(4, 7)" -> "down__(4, 7)";
"(4, 7)" -> "left__(4, 7)";
"(4, 7)" -> "right__(4, 7)";
"(4, 7)" -> "stay__(4, 7)";
"up__(4, 7)" -> "(3, 7)__up__(4, 7)"  [weight="1.0"];
"down__(4, 7)" -> "(5, 7)__down__(4, 7)"  [weight="1.0"];
"left__(4, 7)" -> "(4, 6)__left__(4, 7)"  [weight=1];
"right__(4, 7)" -> "(4, 8)__right__(4, 7)"  [weight="1.0"];
"stay__(4, 7)" -> "(4, 7)__stay__(4, 7)"  [weight="1.0"];
"(4, 8)" -> "up__(4, 8)";
"(4, 8)" -> "down__(4, 8)";
"(4, 8)" -> "left__(4, 8)";
"(4, 8)" -> "right__(4, 8)";
"(4, 8)" -> "stay__(4, 8)";
"up__(4, 8)" -> "(3, 8)__up__(4, 8)"  [weight="1.0"];
"down__(4, 8)" -> "(5, 8)__down__(4, 8)"  [weight="1.0"];
"left__(4, 8)" -> "(4, 7)__left__(4, 8)"  [weight=1];
"right__(4, 8)" -> "(4, 9)__right__(4, 8)"  [weight="1.0"];
"stay__(4, 8)" -> "(4, 8)__stay__(4, 8)"  [weight="1.0"];
"(4, 9)" -> "up__(4, 9)";
"(4, 9)" -> "down__(4, 9)";
"(4, 9)" -> "left__(4, 9)";
"(4, 9)" -> "stay__(4, 9)";
"up__(4, 9)" -> "(3, 9)__up__(4, 9)"  [weight="1.0"];
"down__(4, 9)" -> "(5, 9)__down__(4, 9)"  [weight="1.0"];
"left__(4, 9)" -> "(4, 8)__left__(4, 9)"  [weight=1];
"stay__(4, 9)" -> "(4, 9)__stay__(4, 9)"  [weight="1.0"];
"(4, 0)" -> "down__(4, 0)";
"(4, 0)" -> "right__(4, 0)";
"(4, 0)" -> "stay__(4, 0)";
"down__(4, 0)" -> "(5, 0)__down__(4, 0)"  [weight="1.0"];
"right__(4, 0)" -> "(4, 1)__right__(4, 0)"  [weight="1.0"];
"stay__(4, 0)" -> "(4, 0)__stay__(4, 0)"  [weight=1];
"(4, 1)" -> "down__(4, 1)";
"(4, 1)" -> "left__(4, 1)";
"(4, 1)" -> "right__(4, 1)";
"(4, 1)" -> "stay__(4, 1)";
"down__(4, 1)" -> "(5, 1)__down__(4, 1)"  [weight="1.0"];
"left__(4, 1)" -> "(4, 0)__left__(4, 1)"  [weight=1];
"right__(4, 1)" -> "(4, 2)__right__(4, 1)"  [weight="1.0"];
"stay__(4, 1)" -> "(4, 1)__stay__(4, 1)"  [weight="1.0"];
"(5, 0)" -> "up__(5, 0)";
"(5, 0)" -> "down__(5, 0)";
"(5, 0)" -> "right__(5, 0)";
"(5, 0)" -> "stay__(5, 0)";
"up__(5, 0)" -> "(4, 0)__up__(5, 0)"  [weight="1.0"];
"down__(5, 0)" -> "(6, 0)__down__(5, 0)"  [weight="1.0"];
"right__(5, 0)" -> "(5, 1)__right__(5, 0)"  [weight="1.0"];
"stay__(5, 0)" -> "(5, 0)__stay__(5, 0)"  [weight=1];
"(4, 2)" -> "down__(4, 2)";
"(4, 2)" -> "left__(4, 2)";
"(4, 2)" -> "right__(4, 2)";
"(4, 2)" -> "stay__(4, 2)";
"down__(4, 2)" -> "(5, 2)__down__(4, 2)"  [weight="1.0"];
"left__(4, 2)" -> "(4, 1)__left__(4, 2)"  [weight=1];
"right__(4, 2)" -> "(4, 3)__right__(4, 2)"  [weight="1.0"];
"stay__(4, 2)" -> "(4, 2)__stay__(4, 2)"  [weight="1.0"];
"(5, 1)" -> "up__(5, 1)";
"(5, 1)" -> "down__(5, 1)";
"(5, 1)" -> "left__(5, 1)";
"(5, 1)" -> "right__(5, 1)";
"(5, 1)" -> "stay__(5, 1)";
"up__(5, 1)" -> "(4, 1)__up__(5, 1)"  [weight="1.0"];
"down__(5, 1)" -> "(6, 1)__down__(5, 1)"  [weight="1.0"];
"left__(5, 1)" -> "(5, 0)__left__(5, 1)"  [weight=1];
"right__(5, 1)" -> "(5, 2)__right__(5, 1)"  [weight="1.0"];
"stay__(5, 1)" -> "(5, 1)__stay__(5, 1)"  [weight="1.0"];
"(5, 2)" -> "up__(5, 2)";
"(5, 2)" -> "down__(5, 2)";
"(5, 2)" -> "left__(5, 2)";
"(5, 2)" -> "right__(5, 2)";
"(5, 2)" -> "stay__(5, 2)";
"up__(5, 2)" -> "(4, 2)__up__(5, 2)"  [weight="1.0"];
"down__(5, 2)" -> "(6, 2)__down__(5, 2)"  [weight="1.0"];
"left__(5, 2)" -> "(5, 1)__left__(5, 2)"  [weight=1];
"right__(5, 2)" -> "(5, 3)__right__(5, 2)"  [weight="1.0"];
"stay__(5, 2)" -> "(5, 2)__stay__(5, 2)"  [weight="1.0"];
"(5, 3)" -> "up__(5, 3)";
"(5, 3)" -> "down__(5, 3)";
"(5, 3)" -> "left__(5, 3)";
"(5, 3)" -> "right__(5, 3)";
"(5, 3)" -> "stay__(5, 3)";
"up__(5, 3)" -> "(4, 3)__up__(5, 3)"  [weight="1.0"];
"down__(5, 3)" -> "(6, 3)__down__(5, 3)"  [weight="1.0"];
"left__(5, 3)" -> "(5, 2)__left__(5, 3)"  [weight=1];
"right__(5, 3)" -> "(5, 4)__right__(5, 3)"  [weight="1.0"];
"stay__(5, 3)" -> "(5, 3)__stay__(5, 3)"  [weight="1.0"];
"(5, 4)" -> "up__(5, 4)";
"(5, 4)" -> "left__(5, 4)";
"(5, 4)" -> "right__(5, 4)";
"(5, 4)" -> "stay__(5, 4)";
"up__(5, 4)" -> "(4, 4)__up__(5, 4)"  [weight="1.0"];
"left__(5, 4)" -> "(5, 3)__left__(5, 4)"  [weight=1];
"right__(5, 4)" -> "(5, 5)__right__(5, 4)"  [weight="1.0"];
"stay__(5, 4)" -> "(5, 4)__stay__(5, 4)"  [weight="1.0"];
"(5, 5)" -> "up__(5, 5)";
"(5, 5)" -> "left__(5, 5)";
"(5, 5)" -> "right__(5, 5)";
"(5, 5)" -> "stay__(5, 5)";
"up__(5, 5)" -> "(4, 5)__up__(5, 5)"  [weight="1.0"];
"left__(5, 5)" -> "(5, 4)__left__(5, 5)"  [weight=1];
"right__(5, 5)" -> "(5, 6)__right__(5, 5)"  [weight="1.0"];
"stay__(5, 5)" -> "(5, 5)__stay__(5, 5)"  [weight="1.0"];
"(5, 6)" -> "up__(5, 6)";
"(5, 6)" -> "left__(5, 6)";
"(5, 6)" -> "right__(5, 6)";
"(5, 6)" -> "stay__(5, 6)";
"up__(5, 6)" -> "(4, 6)__up__(5, 6)"  [weight="1.0"];
"left__(5, 6)" -> "(5, 5)__left__(5, 6)"  [weight=1];
"right__(5, 6)" -> "(5, 7)__right__(5, 6)"  [weight="1.0"];
"stay__(5, 6)" -> "(5, 6)__stay__(5, 6)"  [weight="1.0"];
"(5, 7)" -> "up__(5, 7)";
"(5, 7)" -> "left__(5, 7)";
"(5, 7)" -> "right__(5, 7)";
"(5, 7)" -> "stay__(5, 7)";
"up__(5, 7)" -> "(4, 7)__up__(5, 7)"  [weight="1.0"];
"left__(5, 7)" -> "(5, 6)__left__(5, 7)"  [weight=1];
"right__(5, 7)" -> "(5, 8)__right__(5, 7)"  [weight="1.0"];
"stay__(5, 7)" -> "(5, 7)__stay__(5, 7)"  [weight="1.0"];
"(5, 8)" -> "up__(5, 8)";
"(5, 8)" -> "down__(5, 8)";
"(5, 8)" -> "left__(5, 8)";
"(5, 8)" -> "right__(5, 8)";
"(5, 8)" -> "stay__(5, 8)";
"up__(5, 8)" -> "(4, 8)__up__(5, 8)"  [weight="1.0"];
"down__(5, 8)" -> "(6, 8)__down__(5, 8)"  [weight="1.0"];
"left__(5, 8)" -> "(5, 7)__left__(5, 8)"  [weight=1];
"right__(5, 8)" -> "(5, 9)__right__(5, 8)"  [weight="1.0"];
"stay__(5, 8)" -> "(5, 8)__stay__(5, 8)"  [weight="1.0"];
"(5, 9)" -> "up__(5, 9)";
"(5, 9)" -> "down__(5, 9)";
"(5, 9)" -> "left__(5, 9)";
"(5, 9)" -> "stay__(5, 9)";
"up__(5, 9)" -> "(4, 9)__up__(5, 9)"  [weight="1.0"];
"down__(5, 9)" -> "(6, 9)__down__(5, 9)"  [weight="1.0"];
"left__(5, 9)" -> "(5, 8)__left__(5, 9)"  [weight=1];
"stay__(5, 9)" -> "(5, 9)__stay__(5, 9)"  [weight="1.0"];
"(6, 0)" -> "up__(6, 0)";
"(6, 0)" -> "down__(6, 0)";
"(6, 0)" -> "right__(6, 0)";
"(6, 0)" -> "stay__(6, 0)";
"up__(6, 0)" -> "(5, 0)__up__(6, 0)"  [weight="1.0"];
"down__(6, 0)" -> "(7, 0)__down__(6, 0)"  [weight="1.0"];
"right__(6, 0)" -> "(6, 1)__right__(6, 0)"  [weight="1.0"];
"stay__(6, 0)" -> "(6, 0)__stay__(6, 0)"  [weight=1];
"(6, 1)" -> "up__(6, 1)";
"(6, 1)" -> "down__(6, 1)";
"(6, 1)" -> "left__(6, 1)";
"(6, 1)" -> "right__(6, 1)";
"(6, 1)" -> "stay__(6, 1)";
"up__(6, 1)" -> "(5, 1)__up__(6, 1)"  [weight="1.0"];
"down__(6, 1)" -> "(7, 1)__down__(6, 1)"  [weight="1.0"];
"left__(6, 1)" -> "(6, 0)__left__(6, 1)"  [weight=1];
"right__(6, 1)" -> "(6, 2)__right__(6, 1)"  [weight="1.0"];
"stay__(6, 1)" -> "(6, 1)__stay__(6, 1)"  [weight="1.0"];
"(6, 2)" -> "up__(6, 2)";
"(6, 2)" -> "down__(6, 2)";
"(6, 2)" -> "left__(6, 2)";
"(6, 2)" -> "right__(6, 2)";
"(6, 2)" -> "stay__(6, 2)";
"up__(6, 2)" -> "(5, 2)__up__(6, 2)"  [weight="1.0"];
"down__(6, 2)" -> "(7, 2)__down__(6, 2)"  [weight="1.0"];
"left__(6, 2)" -> "(6, 1)__left__(6, 2)"  [weight=1];
"right__(6, 2)" -> "(6, 3)__right__(6, 2)"  [weight="1.0"];
"stay__(6, 2)" -> "(6, 2)__stay__(6, 2)"  [weight="1.0"];
"(6, 3)" -> "up__(6, 3)";
"(6, 3)" -> "down__(6, 3)";
"(6, 3)" -> "left__(6, 3)";
"(6, 3)" -> "stay__(6, 3)";
"up__(6, 3)" -> "(5, 3)__up__(6, 3)"  [weight="1.0"];
"down__(6, 3)" -> "(7, 3)__down__(6, 3)"  [weight="1.0"];
"left__(6, 3)" -> "(6, 2)__left__(6, 3)"  [weight=1];
"stay__(6, 3)" -> "(6, 3)__stay__(6, 3)"  [weight="1.0"];
"(6, 8)" -> "up__(6, 8)";
"(6, 8)" -> "down__(6, 8)";
"(6, 8)" -> "right__(6, 8)";
"(6, 8)" -> "stay__(6, 8)";
"up__(6, 8)" -> "(5, 8)__up__(6, 8)"  [weight="1.0"];
"down__(6, 8)" -> "(7, 8)__down__(6, 8)"  [weight="1.0"];
"right__(6, 8)" -> "(6, 9)__right__(6, 8)"  [weight="1.0"];
"stay__(6, 8)" -> "(6, 8)__stay__(6, 8)"  [weight=1];
"(6, 9)" -> "up__(6, 9)";
"(6, 9)" -> "down__(6, 9)";
"(6, 9)" -> "left__(6, 9)";
"(6, 9)" -> "stay__(6, 9)";
"up__(6, 9)" -> "(5, 9)__up__(6, 9)"  [weight="1.0"];
"down__(6, 9)" -> "(7, 9)__down__(6, 9)"  [weight="1.0"];
"left__(6, 9)" -> "(6, 8)__left__(6, 9)"  [weight=1];
"stay__(6, 9)" -> "(6, 9)__stay__(6, 9)"  [weight="1.0"];
"(7, 0)" -> "up__(7, 0)";
"(7, 0)" -> "down__(7, 0)";
"(7, 0)" -> "right__(7, 0)";
"(7, 0)" -> "stay__(7, 0)";
"up__(7, 0)" -> "(6, 0)__up__(7, 0)"  [weight="1.0"];
"down__(7, 0)" -> "(8, 0)__down__(7, 0)"  [weight="1.0"];
"right__(7, 0)" -> "(7, 1)__right__(7, 0)"  [weight="1.0"];
"stay__(7, 0)" -> "(7, 0)__stay__(7, 0)"  [weight=1];
"(7, 1)" -> "up__(7, 1)";
"(7, 1)" -> "down__(7, 1)";
"(7, 1)" -> "left__(7, 1)";
"(7, 1)" -> "right__(7, 1)";
"(7, 1)" -> "stay__(7, 1)";
"up__(7, 1)" -> "(6, 1)__up__(7, 1)"  [weight="1.0"];
"down__(7, 1)" -> "(8, 1)__down__(7, 1)"  [weight="1.0"];
"left__(7, 1)" -> "(7, 0)__left__(7, 1)"  [weight=1];
"right__(7, 1)" -> "(7, 2)__right__(7, 1)"  [weight="1.0"];
"stay__(7, 1)" -> "(7, 1)__stay__(7, 1)"  [weight="1.0"];
"(7, 2)" -> "up__(7, 2)";
"(7, 2)" -> "down__(7, 2)";
"(7, 2)" -> "left__(7, 2)";
"(7, 2)" -> "right__(7, 2)";
"(7, 2)" -> "stay__(7, 2)";
"up__(7, 2)" -> "(6, 2)__up__(7, 2)"  [weight="1.0"];
"down__(7, 2)" -> "(8, 2)__down__(7, 2)"  [weight="1.0"];
"left__(7, 2)" -> "(7, 1)__left__(7, 2)"  [weight=1];
"right__(7, 2)" -> "(7, 3)__right__(7, 2)"  [weight="1.0"];
"stay__(7, 2)" -> "(7, 2)__stay__(7, 2)"  [weight="1.0"];
"(7, 3)" -> "up__(7, 3)";
"(7, 3)" -> "down__(7, 3)";
"(7, 3)" -> "left__(7, 3)";
"(7, 3)" -> "stay__(7, 3)";
"up__(7, 3)" -> "(6, 3)__up__(7, 3)"  [weight="1.0"];
"down__(7, 3)" -> "(8, 3)__down__(7, 3)"  [weight="1.0"];
"left__(7, 3)" -> "(7, 2)__left__(7, 3)"  [weight=1];
"stay__(7, 3)" -> "(7, 3)__stay__(7, 3)"  [weight="1.0"];
"(7, 8)" -> "up__(7, 8)";
"(7, 8)" -> "down__(7, 8)";
"(7, 8)" -> "right__(7, 8)";
"(7, 8)" -> "stay__(7, 8)";
"up__(7, 8)" -> "(6, 8)__up__(7, 8)"  [weight="1.0"];
"down__(7, 8)" -> "(8, 8)__down__(7, 8)"  [weight="1.0"];
"right__(7, 8)" -> "(7, 9)__right__(7, 8)"  [weight="1.0"];
"stay__(7, 8)" -> "(7, 8)__stay__(7, 8)"  [weight=1];
"(7, 9)" -> "up__(7, 9)";
"(7, 9)" -> "down__(7, 9)";
"(7, 9)" -> "left__(7, 9)";
"(7, 9)" -> "stay__(7, 9)";
"up__(7, 9)" -> "(6, 9)__up__(7, 9)"  [weight="1.0"];
"down__(7, 9)" -> "(8, 9)__down__(7, 9)"  [weight="1.0"];
"left__(7, 9)" -> "(7, 8)__left__(7, 9)"  [weight=1];
"stay__(7, 9)" -> "(7, 9)__stay__(7, 9)"  [weight="1.0"];
"(8, 0)" -> "up__(8, 0)";
"(8, 0)" -> "down__(8, 0)";
"(8, 0)" -> "right__(8, 0)";
"(8, 0)" -> "stay__(8, 0)";
"up__(8, 0)" -> "(7, 0)__up__(8, 0)"  [weight="1.0"];
"down__(8, 0)" -> "(9, 0)__down__(8, 0)"  [weight="1.0"];
"right__(8, 0)" -> "(8, 1)__right__(8, 0)"  [weight="1.0"];
"stay__(8, 0)" -> "(8, 0)__stay__(8, 0)"  [weight=1];
"(8, 1)" -> "up__(8, 1)";
"(8, 1)" -> "down__(8, 1)";
"(8, 1)" -> "left__(8, 1)";
"(8, 1)" -> "right__(8, 1)";
"(8, 1)" -> "stay__(8, 1)";
"up__(8, 1)" -> "(7, 1)__up__(8, 1)"  [weight="1.0"];
"down__(8, 1)" -> "(9, 1)__down__(8, 1)"  [weight="1.0"];
"left__(8, 1)" -> "(8, 0)__left__(8, 1)"  [weight=1];
"right__(8, 1)" -> "(8, 2)__right__(8, 1)"  [weight="1.0"];
"stay__(8, 1)" -> "(8, 1)__stay__(8, 1)"  [weight="1.0"];
"(8, 2)" -> "up__(8, 2)";
"(8, 2)" -> "down__(8, 2)";
"(8, 2)" -> "left__(8, 2)";
"(8, 2)" -> "right__(8, 2)";
"(8, 2)" -> "stay__(8, 2)";
"up__(8, 2)" -> "(7, 2)__up__(8, 2)"  [weight="1.0"];
"down__(8, 2)" -> "(9, 2)__down__(8, 2)"  [weight="1.0"];
"left__(8, 2)" -> "(8, 1)__left__(8, 2)"  [weight=1];
"right__(8, 2)" -> "(8, 3)__right__(8, 2)"  [weight="1.0"];
"stay__(8, 2)" -> "(8, 2)__stay__(8, 2)"  [weight="1.0"];
"(8, 3)" -> "up__(8, 3)";
"(8, 3)" -> "down__(8, 3)";
"(8, 3)" -> "left__(8, 3)";
"(8, 3)" -> "stay__(8, 3)";
"up__(8, 3)" -> "(7, 3)__up__(8, 3)"  [weight="1.0"];
"down__(8, 3)" -> "(9, 3)__down__(8, 3)"  [weight="1.0"];
"left__(8, 3)" -> "(8, 2)__left__(8, 3)"  [weight=1];
"stay__(8, 3)" -> "(8, 3)__stay__(8, 3)"  [weight="1.0"];
"(8, 8)" -> "up__(8, 8)";
"(8, 8)" -> "down__(8, 8)";
"(8, 8)" -> "right__(8, 8)";
"(8, 8)" -> "stay__(8, 8)";
"up__(8, 8)" -> "(7, 8)__up__(8, 8)"  [weight="1.0"];
"down__(8, 8)" -> "(9, 8)__down__(8, 8)"  [weight="1.0"];
"right__(8, 8)" -> "(8, 9)__right__(8, 8)"  [weight="1.0"];
"stay__(8, 8)" -> "(8, 8)__stay__(8, 8)"  [weight=1];
"(8, 9)" -> "up__(8, 9)";
"(8, 9)" -> "down__(8, 9)";
"(8, 9)" -> "left__(8, 9)";
"(8, 9)" -> "stay__(8, 9)";
"up__(8, 9)" -> "(7, 9)__up__(8, 9)"  [weight="1.0"];
"down__(8, 9)" -> "(9, 9)__down__(8, 9)"  [weight="1.0"];
"left__(8, 9)" -> "(8, 8)__left__(8, 9)"  [weight=1];
"stay__(8, 9)" -> "(8, 9)__stay__(8, 9)"  [weight="1.0"];
"(9, 0)" -> "up__(9, 0)";
"(9, 0)" -> "right__(9, 0)";
"(9, 0)" -> "stay__(9, 0)";
"up__(9, 0)" -> "(8, 0)__up__(9, 0)"  [weight="1.0"];
"right__(9, 0)" -> "(9, 1)__right__(9, 0)"  [weight="1.0"];
"stay__(9, 0)" -> "(9, 0)__stay__(9, 0)"  [weight=1];
"(9, 1)" -> "up__(9, 1)";
"(9, 1)" -> "left__(9, 1)";
"(9, 1)" -> "right__(9, 1)";
"(9, 1)" -> "stay__(9, 1)";
"up__(9, 1)" -> "(8, 1)__up__(9, 1)"  [weight="1.0"];
"left__(9, 1)" -> "(9, 0)__left__(9, 1)"  [weight=1];
"right__(9, 1)" -> "(9, 2)__right__(9, 1)"  [weight="1.0"];
"stay__(9, 1)" -> "(9, 1)__stay__(9, 1)"  [weight="1.0"];
"(9, 2)" -> "up__(9, 2)";
"(9, 2)" -> "left__(9, 2)";
"(9, 2)" -> "right__(9, 2)";
"(9, 2)" -> "stay__(9, 2)";
"up__(9, 2)" -> "(8, 2)__up__(9, 2)"  [weight="1.0"];
"left__(9, 2)" -> "(9, 1)__left__(9, 2)"  [weight=1];
"right__(9, 2)" -> "(9, 3)__right__(9, 2)"  [weight="1.0"];
"stay__(9, 2)" -> "(9, 2)__stay__(9, 2)"  [weight="1.0"];
"(9, 3)" -> "up__(9, 3)";
"(9, 3)" -> "left__(9, 3)";
"(9, 3)" -> "right__(9, 3)";
"(9, 3)" -> "stay__(9, 3)";
"up__(9, 3)" -> "(8, 3)__up__(9, 3)"  [weight="1.0"];
"left__(9, 3)" -> "(9, 2)__left__(9, 3)"  [weight=1];
"right__(9, 3)" -> "(9, 4)__right__(9, 3)"  [weight="1.0"];
"stay__(9, 3)" -> "(9, 3)__stay__(9, 3)"  [weight="1.0"];
"(9, 8)" -> "up__(9, 8)";
"(9, 8)" -> "left__(9, 8)";
"(9, 8)" -> "right__(9, 8)";
"(9, 8)" -> "stay__(9, 8)";
"up__(9, 8)" -> "(8, 8)__up__(9, 8)"  [weight="1.0"];
"left__(9, 8)" -> "(9, 7)__left__(9, 8)"  [weight=1];
"right__(9, 8)" -> "(9, 9)__right__(9, 8)"  [weight="1.0"];
"stay__(9, 8)" -> "(9, 8)__stay__(9, 8)"  [weight="1.0"];
"(9, 9)" -> "up__(9, 9)";
"(9, 9)" -> "left__(9, 9)";
"(9, 9)" -> "stay__(9, 9)";
"up__(9, 9)" -> "(8, 9)__up__(9, 9)"  [weight="1.0"];
"left__(9, 9)" -> "(9, 8)__left__(9, 9)"  [weight=1];
"stay__(9, 9)" -> "(9, 9)__stay__(9, 9)"  [weight="1.0"];
"(9, 4)" -> "left__(9, 4)";
"(9, 4)" -> "right__(9, 4)";
"(9, 4)" -> "stay__(9, 4)";
"left__(9, 4)" -> "(9, 3)__left__(9, 4)"  [weight=1];
"right__(9, 4)" -> "(9, 5)__right__(9, 4)"  [weight="1.0"];
"stay__(9, 4)" -> "(9, 4)__stay__(9, 4)"  [weight="1.0"];
"(9, 5)" -> "left__(9, 5)";
"(9, 5)" -> "right__(9, 5)";
"(9, 5)" -> "stay__(9, 5)";
"left__(9, 5)" -> "(9, 4)__left__(9, 5)"  [weight=1];
"right__(9, 5)" -> "(9, 6)__right__(9, 5)"  [weight="1.0"];
"stay__(9, 5)" -> "(9, 5)__stay__(9, 5)"  [weight="1.0"];
"(9, 6)" -> "left__(9, 6)";
"(9, 6)" -> "right__(9, 6)";
"(9, 6)" -> "stay__(9, 6)";
"left__(9, 6)" -> "(9, 5)__left__(9, 6)"  [weight=1];
"right__(9, 6)" -> "(9, 7)__right__(9, 6)"  [weight="1.0"];
"stay__(9, 6)" -> "(9, 6)__stay__(9, 6)"  [weight="1.0"];
"(9, 7)" -> "left__(9, 7)";
"(9, 7)" -> "right__(9, 7)";
"(9, 7)" -> "stay__(9, 7)";
"left__(9, 7)" -> "(9, 6)__left__(9, 7)"  [weight=1];
"right__(9, 7)" -> "(9, 8)__right__(9, 7)"  [weight="1.0"];
"stay__(9, 7)" -> "(9, 7)__stay__(9, 7)"  [weight="1.0"];
}
