strict digraph  {
"(0, 0)";
"down__(0, 0)";
"(1, 0)__down__(0, 0)";
"right__(0, 0)";
"(0, 1)__right__(0, 0)";
"stay__(0, 0)";
"(0, 0)__stay__(0, 0)";
"(0, 1)";
"down__(0, 1)";
"(1, 1)__down__(0, 1)";
"left__(0, 1)";
"(0, 0)__left__(0, 1)";
"right__(0, 1)";
"(0, 2)__right__(0, 1)";
"stay__(0, 1)";
"(0, 1)__stay__(0, 1)";
"(1, 0)";
"up__(1, 0)";
"(0, 0)__up__(1, 0)";
"down__(1, 0)";
"(2, 0)__down__(1, 0)";
"right__(1, 0)";
"(1, 1)__right__(1, 0)";
"stay__(1, 0)";
"(1, 0)__stay__(1, 0)";
"(0, 2)";
"down__(0, 2)";
"(1, 2)__down__(0, 2)";
"left__(0, 2)";
"(0, 1)__left__(0, 2)";
"stay__(0, 2)";
"(0, 2)__stay__(0, 2)";
"(1, 1)";
"up__(1, 1)";
"(0, 1)__up__(1, 1)";
"down__(1, 1)";
"(2, 1)__down__(1, 1)";
"left__(1, 1)";
"(1, 0)__left__(1, 1)";
"right__(1, 1)";
"(1, 2)__right__(1, 1)";
"stay__(1, 1)";
"(1, 1)__stay__(1, 1)";
"(2, 0)";
"up__(2, 0)";
"(1, 0)__up__(2, 0)";
"right__(2, 0)";
"(2, 1)__right__(2, 0)";
"stay__(2, 0)";
"(2, 0)__stay__(2, 0)";
"(1, 2)";
"up__(1, 2)";
"(0, 2)__up__(1, 2)";
"down__(1, 2)";
"(2, 2)__down__(1, 2)";
"left__(1, 2)";
"(1, 1)__left__(1, 2)";
"stay__(1, 2)";
"(1, 2)__stay__(1, 2)";
"(2, 1)";
"up__(2, 1)";
"(1, 1)__up__(2, 1)";
"left__(2, 1)";
"(2, 0)__left__(2, 1)";
"right__(2, 1)";
"(2, 2)__right__(2, 1)";
"stay__(2, 1)";
"(2, 1)__stay__(2, 1)";
"(2, 2)";
"up__(2, 2)";
"(1, 2)__up__(2, 2)";
"left__(2, 2)";
"(2, 1)__left__(2, 2)";
"stay__(2, 2)";
"(2, 2)__stay__(2, 2)";
"(0, 0)" -> "down__(0, 0)";
"(0, 0)" -> "right__(0, 0)";
"(0, 0)" -> "stay__(0, 0)";
"down__(0, 0)" -> "(1, 0)__down__(0, 0)"  [weight="1.0"];
"right__(0, 0)" -> "(0, 1)__right__(0, 0)"  [weight="1.0"];
"stay__(0, 0)" -> "(0, 0)__stay__(0, 0)"  [weight=1];
"(0, 1)" -> "down__(0, 1)";
"(0, 1)" -> "left__(0, 1)";
"(0, 1)" -> "right__(0, 1)";
"(0, 1)" -> "stay__(0, 1)";
"down__(0, 1)" -> "(1, 1)__down__(0, 1)"  [weight="1.0"];
"left__(0, 1)" -> "(0, 0)__left__(0, 1)"  [weight=1];
"right__(0, 1)" -> "(0, 2)__right__(0, 1)"  [weight="1.0"];
"stay__(0, 1)" -> "(0, 1)__stay__(0, 1)"  [weight="1.0"];
"(1, 0)" -> "up__(1, 0)";
"(1, 0)" -> "down__(1, 0)";
"(1, 0)" -> "right__(1, 0)";
"(1, 0)" -> "stay__(1, 0)";
"up__(1, 0)" -> "(0, 0)__up__(1, 0)"  [weight="1.0"];
"down__(1, 0)" -> "(2, 0)__down__(1, 0)"  [weight="1.0"];
"right__(1, 0)" -> "(1, 1)__right__(1, 0)"  [weight="1.0"];
"stay__(1, 0)" -> "(1, 0)__stay__(1, 0)"  [weight=1];
"(0, 2)" -> "down__(0, 2)";
"(0, 2)" -> "left__(0, 2)";
"(0, 2)" -> "stay__(0, 2)";
"down__(0, 2)" -> "(1, 2)__down__(0, 2)"  [weight="1.0"];
"left__(0, 2)" -> "(0, 1)__left__(0, 2)"  [weight=1];
"stay__(0, 2)" -> "(0, 2)__stay__(0, 2)"  [weight="1.0"];
"(1, 1)" -> "up__(1, 1)";
"(1, 1)" -> "down__(1, 1)";
"(1, 1)" -> "left__(1, 1)";
"(1, 1)" -> "right__(1, 1)";
"(1, 1)" -> "stay__(1, 1)";
"up__(1, 1)" -> "(0, 1)__up__(1, 1)"  [weight="1.0"];
"down__(1, 1)" -> "(2, 1)__down__(1, 1)"  [weight="1.0"];
"left__(1, 1)" -> "(1, 0)__left__(1, 1)"  [weight=1];
"right__(1, 1)" -> "(1, 2)__right__(1, 1)"  [weight="1.0"];
"stay__(1, 1)" -> "(1, 1)__stay__(1, 1)"  [weight="1.0"];
"(2, 0)" -> "up__(2, 0)";
"(2, 0)" -> "right__(2, 0)";
"(2, 0)" -> "stay__(2, 0)";
"up__(2, 0)" -> "(1, 0)__up__(2, 0)"  [weight="1.0"];
"right__(2, 0)" -> "(2, 1)__right__(2, 0)"  [weight="1.0"];
"stay__(2, 0)" -> "(2, 0)__stay__(2, 0)"  [weight=1];
"(1, 2)" -> "up__(1, 2)";
"(1, 2)" -> "down__(1, 2)";
"(1, 2)" -> "left__(1, 2)";
"(1, 2)" -> "stay__(1, 2)";
"up__(1, 2)" -> "(0, 2)__up__(1, 2)"  [weight="1.0"];
"down__(1, 2)" -> "(2, 2)__down__(1, 2)"  [weight="1.0"];
"left__(1, 2)" -> "(1, 1)__left__(1, 2)"  [weight=1];
"stay__(1, 2)" -> "(1, 2)__stay__(1, 2)"  [weight="1.0"];
"(2, 1)" -> "up__(2, 1)";
"(2, 1)" -> "left__(2, 1)";
"(2, 1)" -> "right__(2, 1)";
"(2, 1)" -> "stay__(2, 1)";
"up__(2, 1)" -> "(1, 1)__up__(2, 1)"  [weight="1.0"];
"left__(2, 1)" -> "(2, 0)__left__(2, 1)"  [weight=1];
"right__(2, 1)" -> "(2, 2)__right__(2, 1)"  [weight="1.0"];
"stay__(2, 1)" -> "(2, 1)__stay__(2, 1)"  [weight="1.0"];
"(2, 2)" -> "up__(2, 2)";
"(2, 2)" -> "left__(2, 2)";
"(2, 2)" -> "stay__(2, 2)";
"up__(2, 2)" -> "(1, 2)__up__(2, 2)"  [weight="1.0"];
"left__(2, 2)" -> "(2, 1)__left__(2, 2)"  [weight=1];
"stay__(2, 2)" -> "(2, 2)__stay__(2, 2)"  [weight="1.0"];
}
