strict digraph  {
"(0, 0)";
"down__(0, 0)";
"(1, 0)__down__(0, 0)";
"right__(0, 0)";
"(0, 1)__right__(0, 0)";
"stay__(0, 0)";
"(0, 0)__stay__(0, 0)";
"(0, 1)";
"left__(0, 1)";
"(0, 0)__left__(0, 1)";
"right__(0, 1)";
"(0, 2)__right__(0, 1)";
"stay__(0, 1)";
"(0, 1)__stay__(0, 1)";
"(1, 0)";
"up__(1, 0)";
"(0, 0)__up__(1, 0)";
"down__(1, 0)";
"(2, 0)__down__(1, 0)";
"stay__(1, 0)";
"(1, 0)__stay__(1, 0)";
"(0, 2)";
"left__(0, 2)";
"(0, 1)__left__(0, 2)";
"right__(0, 2)";
"(0, 3)__right__(0, 2)";
"stay__(0, 2)";
"(0, 2)__stay__(0, 2)";
"(2, 0)";
"up__(2, 0)";
"(1, 0)__up__(2, 0)";
"down__(2, 0)";
"(3, 0)__down__(2, 0)";
"stay__(2, 0)";
"(2, 0)__stay__(2, 0)";
"(0, 3)";
"left__(0, 3)";
"(0, 2)__left__(0, 3)";
"right__(0, 3)";
"(0, 4)__right__(0, 3)";
"stay__(0, 3)";
"(0, 3)__stay__(0, 3)";
"(0, 4)";
"left__(0, 4)";
"(0, 3)__left__(0, 4)";
"right__(0, 4)";
"(0, 5)__right__(0, 4)";
"stay__(0, 4)";
"(0, 4)__stay__(0, 4)";
"(0, 5)";
"down__(0, 5)";
"(1, 5)__down__(0, 5)";
"left__(0, 5)";
"(0, 4)__left__(0, 5)";
"right__(0, 5)";
"(0, 6)__right__(0, 5)";
"stay__(0, 5)";
"(0, 5)__stay__(0, 5)";
"(0, 6)";
"left__(0, 6)";
"(0, 5)__left__(0, 6)";
"right__(0, 6)";
"(0, 7)__right__(0, 6)";
"stay__(0, 6)";
"(0, 6)__stay__(0, 6)";
"(1, 5)";
"up__(1, 5)";
"(0, 5)__up__(1, 5)";
"down__(1, 5)";
"(2, 5)__down__(1, 5)";
"stay__(1, 5)";
"(1, 5)__stay__(1, 5)";
"(0, 7)";
"left__(0, 7)";
"(0, 6)__left__(0, 7)";
"right__(0, 7)";
"(0, 8)__right__(0, 7)";
"stay__(0, 7)";
"(0, 7)__stay__(0, 7)";
"(2, 5)";
"up__(2, 5)";
"(1, 5)__up__(2, 5)";
"down__(2, 5)";
"(3, 5)__down__(2, 5)";
"stay__(2, 5)";
"(2, 5)__stay__(2, 5)";
"(0, 8)";
"left__(0, 8)";
"(0, 7)__left__(0, 8)";
"right__(0, 8)";
"(0, 9)__right__(0, 8)";
"stay__(0, 8)";
"(0, 8)__stay__(0, 8)";
"(0, 9)";
"left__(0, 9)";
"(0, 8)__left__(0, 9)";
"stay__(0, 9)";
"(0, 9)__stay__(0, 9)";
"(3, 0)";
"up__(3, 0)";
"(2, 0)__up__(3, 0)";
"down__(3, 0)";
"(4, 0)__down__(3, 0)";
"right__(3, 0)";
"(3, 1)__right__(3, 0)";
"stay__(3, 0)";
"(3, 0)__stay__(3, 0)";
"(3, 5)";
"up__(3, 5)";
"(2, 5)__up__(3, 5)";
"down__(3, 5)";
"(4, 5)__down__(3, 5)";
"left__(3, 5)";
"(3, 4)__left__(3, 5)";
"stay__(3, 5)";
"(3, 5)__stay__(3, 5)";
"(3, 1)";
"left__(3, 1)";
"(3, 0)__left__(3, 1)";
"right__(3, 1)";
"(3, 2)__right__(3, 1)";
"stay__(3, 1)";
"(3, 1)__stay__(3, 1)";
"(4, 0)";
"up__(4, 0)";
"(3, 0)__up__(4, 0)";
"down__(4, 0)";
"(5, 0)__down__(4, 0)";
"stay__(4, 0)";
"(4, 0)__stay__(4, 0)";
"(3, 2)";
"down__(3, 2)";
"(4, 2)__down__(3, 2)";
"left__(3, 2)";
"(3, 1)__left__(3, 2)";
"right__(3, 2)";
"(3, 3)__right__(3, 2)";
"stay__(3, 2)";
"(3, 2)__stay__(3, 2)";
"(3, 3)";
"left__(3, 3)";
"(3, 2)__left__(3, 3)";
"right__(3, 3)";
"(3, 4)__right__(3, 3)";
"stay__(3, 3)";
"(3, 3)__stay__(3, 3)";
"(4, 2)";
"up__(4, 2)";
"(3, 2)__up__(4, 2)";
"down__(4, 2)";
"(5, 2)__down__(4, 2)";
"stay__(4, 2)";
"(4, 2)__stay__(4, 2)";
"(3, 4)";
"left__(3, 4)";
"(3, 3)__left__(3, 4)";
"right__(3, 4)";
"(3, 5)__right__(3, 4)";
"stay__(3, 4)";
"(3, 4)__stay__(3, 4)";
"(4, 5)";
"up__(4, 5)";
"(3, 5)__up__(4, 5)";
"down__(4, 5)";
"(5, 5)__down__(4, 5)";
"right__(4, 5)";
"(4, 6)__right__(4, 5)";
"stay__(4, 5)";
"(4, 5)__stay__(4, 5)";
"(4, 6)";
"left__(4, 6)";
"(4, 5)__left__(4, 6)";
"right__(4, 6)";
"(4, 7)__right__(4, 6)";
"stay__(4, 6)";
"(4, 6)__stay__(4, 6)";
"(4, 7)";
"left__(4, 7)";
"(4, 6)__left__(4, 7)";
"right__(4, 7)";
"(4, 8)__right__(4, 7)";
"stay__(4, 7)";
"(4, 7)__stay__(4, 7)";
"(4, 8)";
"down__(4, 8)";
"(5, 8)__down__(4, 8)";
"left__(4, 8)";
"(4, 7)__left__(4, 8)";
"stay__(4, 8)";
"(4, 8)__stay__(4, 8)";
"(5, 0)";
"up__(5, 0)";
"(4, 0)__up__(5, 0)";
"down__(5, 0)";
"(6, 0)__down__(5, 0)";
"stay__(5, 0)";
"(5, 0)__stay__(5, 0)";
"(5, 2)";
"up__(5, 2)";
"(4, 2)__up__(5, 2)";
"down__(5, 2)";
"(6, 2)__down__(5, 2)";
"stay__(5, 2)";
"(5, 2)__stay__(5, 2)";
"(5, 5)";
"up__(5, 5)";
"(4, 5)__up__(5, 5)";
"down__(5, 5)";
"(6, 5)__down__(5, 5)";
"stay__(5, 5)";
"(5, 5)__stay__(5, 5)";
"(5, 8)";
"up__(5, 8)";
"(4, 8)__up__(5, 8)";
"down__(5, 8)";
"(6, 8)__down__(5, 8)";
"stay__(5, 8)";
"(5, 8)__stay__(5, 8)";
"(6, 0)";
"up__(6, 0)";
"(5, 0)__up__(6, 0)";
"down__(6, 0)";
"(7, 0)__down__(6, 0)";
"stay__(6, 0)";
"(6, 0)__stay__(6, 0)";
"(6, 2)";
"up__(6, 2)";
"(5, 2)__up__(6, 2)";
"down__(6, 2)";
"(7, 2)__down__(6, 2)";
"stay__(6, 2)";
"(6, 2)__stay__(6, 2)";
"(6, 5)";
"up__(6, 5)";
"(5, 5)__up__(6, 5)";
"down__(6, 5)";
"(7, 5)__down__(6, 5)";
"right__(6, 5)";
"(6, 6)__right__(6, 5)";
"stay__(6, 5)";
"(6, 5)__stay__(6, 5)";
"(6, 6)";
"left__(6, 6)";
"(6, 5)__left__(6, 6)";
"right__(6, 6)";
"(6, 7)__right__(6, 6)";
"stay__(6, 6)";
"(6, 6)__stay__(6, 6)";
"(6, 7)";
"left__(6, 7)";
"(6, 6)__left__(6, 7)";
"right__(6, 7)";
"(6, 8)__right__(6, 7)";
"stay__(6, 7)";
"(6, 7)__stay__(6, 7)";
"(6, 8)";
"up__(6, 8)";
"(5, 8)__up__(6, 8)";
"down__(6, 8)";
"(7, 8)__down__(6, 8)";
"left__(6, 8)";
"(6, 7)__left__(6, 8)";
"stay__(6, 8)";
"(6, 8)__stay__(6, 8)";
"(7, 0)";
"up__(7, 0)";
"(6, 0)__up__(7, 0)";
"down__(7, 0)";
"(8, 0)__down__(7, 0)";
"stay__(7, 0)";
"(7, 0)__stay__(7, 0)";
"(7, 2)";
"up__(7, 2)";
"(6, 2)__up__(7, 2)";
"down__(7, 2)";
"(8, 2)__down__(7, 2)";
"stay__(7, 2)";
"(7, 2)__stay__(7, 2)";
"(7, 5)";
"up__(7, 5)";
"(6, 5)__up__(7, 5)";
"down__(7, 5)";
"(8, 5)__down__(7, 5)";
"stay__(7, 5)";
"(7, 5)__stay__(7, 5)";
"(7, 8)";
"up__(7, 8)";
"(6, 8)__up__(7, 8)";
"down__(7, 8)";
"(8, 8)__down__(7, 8)";
"stay__(7, 8)";
"(7, 8)__stay__(7, 8)";
"(8, 0)";
"up__(8, 0)";
"(7, 0)__up__(8, 0)";
"down__(8, 0)";
"(9, 0)__down__(8, 0)";
"stay__(8, 0)";
"(8, 0)__stay__(8, 0)";
"(8, 2)";
"up__(8, 2)";
"(7, 2)__up__(8, 2)";
"down__(8, 2)";
"(9, 2)__down__(8, 2)";
"stay__(8, 2)";
"(8, 2)__stay__(8, 2)";
"(8, 5)";
"up__(8, 5)";
"(7, 5)__up__(8, 5)";
"down__(8, 5)";
"(9, 5)__down__(8, 5)";
"right__(8, 5)";
"(8, 6)__right__(8, 5)";
"stay__(8, 5)";
"(8, 5)__stay__(8, 5)";
"(8, 6)";
"left__(8, 6)";
"(8, 5)__left__(8, 6)";
"right__(8, 6)";
"(8, 7)__right__(8, 6)";
"stay__(8, 6)";
"(8, 6)__stay__(8, 6)";
"(8, 7)";
"left__(8, 7)";
"(8, 6)__left__(8, 7)";
"right__(8, 7)";
"(8, 8)__right__(8, 7)";
"stay__(8, 7)";
"(8, 7)__stay__(8, 7)";
"(8, 8)";
"up__(8, 8)";
"(7, 8)__up__(8, 8)";
"down__(8, 8)";
"(9, 8)__down__(8, 8)";
"left__(8, 8)";
"(8, 7)__left__(8, 8)";
"stay__(8, 8)";
"(8, 8)__stay__(8, 8)";
"(9, 0)";
"up__(9, 0)";
"(8, 0)__up__(9, 0)";
"right__(9, 0)";
"(9, 1)__right__(9, 0)";
"stay__(9, 0)";
"(9, 0)__stay__(9, 0)";
"(9, 1)";
"left__(9, 1)";
"(9, 0)__left__(9, 1)";
"right__(9, 1)";
"(9, 2)__right__(9, 1)";
"stay__(9, 1)";
"(9, 1)__stay__(9, 1)";
"(9, 2)";
"up__(9, 2)";
"(8, 2)__up__(9, 2)";
"left__(9, 2)";
"(9, 1)__left__(9, 2)";
"right__(9, 2)";
"(9, 3)__right__(9, 2)";
"stay__(9, 2)";
"(9, 2)__stay__(9, 2)";
"(9, 3)";
"left__(9, 3)";
"(9, 2)__left__(9, 3)";
"right__(9, 3)";
"(9, 4)__right__(9, 3)";
"stay__(9, 3)";
"(9, 3)__stay__(9, 3)";
"(9, 4)";
"left__(9, 4)";
"(9, 3)__left__(9, 4)";
"right__(9, 4)";
"(9, 5)__right__(9, 4)";
"stay__(9, 4)";
"(9, 4)__stay__(9, 4)";
"(9, 5)";
"up__(9, 5)";
"(8, 5)__up__(9, 5)";
"left__(9, 5)";
"(9, 4)__left__(9, 5)";
"stay__(9, 5)";
"(9, 5)__stay__(9, 5)";
"(9, 8)";
"up__(9, 8)";
"(8, 8)__up__(9, 8)";
"stay__(9, 8)";
"(9, 8)__stay__(9, 8)";
"(0, 0)" -> "down__(0, 0)";
"(0, 0)" -> "right__(0, 0)";
"(0, 0)" -> "stay__(0, 0)";
"down__(0, 0)" -> "(1, 0)__down__(0, 0)"  [weight="1.0"];
"right__(0, 0)" -> "(0, 1)__right__(0, 0)"  [weight="1.0"];
"stay__(0, 0)" -> "(0, 0)__stay__(0, 0)"  [weight=1];
"(0, 1)" -> "left__(0, 1)";
"(0, 1)" -> "right__(0, 1)";
"(0, 1)" -> "stay__(0, 1)";
"left__(0, 1)" -> "(0, 0)__left__(0, 1)"  [weight=1];
"right__(0, 1)" -> "(0, 2)__right__(0, 1)"  [weight="1.0"];
"stay__(0, 1)" -> "(0, 1)__stay__(0, 1)"  [weight="1.0"];
"(1, 0)" -> "up__(1, 0)";
"(1, 0)" -> "down__(1, 0)";
"(1, 0)" -> "stay__(1, 0)";
"up__(1, 0)" -> "(0, 0)__up__(1, 0)"  [weight="1.0"];
"down__(1, 0)" -> "(2, 0)__down__(1, 0)"  [weight="1.0"];
"stay__(1, 0)" -> "(1, 0)__stay__(1, 0)"  [weight=1];
"(0, 2)" -> "left__(0, 2)";
"(0, 2)" -> "right__(0, 2)";
"(0, 2)" -> "stay__(0, 2)";
"left__(0, 2)" -> "(0, 1)__left__(0, 2)"  [weight=1];
"right__(0, 2)" -> "(0, 3)__right__(0, 2)"  [weight="1.0"];
"stay__(0, 2)" -> "(0, 2)__stay__(0, 2)"  [weight="1.0"];
"(2, 0)" -> "up__(2, 0)";
"(2, 0)" -> "down__(2, 0)";
"(2, 0)" -> "stay__(2, 0)";
"up__(2, 0)" -> "(1, 0)__up__(2, 0)"  [weight="1.0"];
"down__(2, 0)" -> "(3, 0)__down__(2, 0)"  [weight="1.0"];
"stay__(2, 0)" -> "(2, 0)__stay__(2, 0)"  [weight=1];
"(0, 3)" -> "left__(0, 3)";
"(0, 3)" -> "right__(0, 3)";
"(0, 3)" -> "stay__(0, 3)";
"left__(0, 3)" -> "(0, 2)__left__(0, 3)"  [weight=1];
"right__(0, 3)" -> "(0, 4)__right__(0, 3)"  [weight="1.0"];
"stay__(0, 3)" -> "(0, 3)__stay__(0, 3)"  [weight="1.0"];
"(0, 4)" -> "left__(0, 4)";
"(0, 4)" -> "right__(0, 4)";
"(0, 4)" -> "stay__(0, 4)";
"left__(0, 4)" -> "(0, 3)__left__(0, 4)"  [weight=1];
"right__(0, 4)" -> "(0, 5)__right__(0, 4)"  [weight="1.0"];
"stay__(0, 4)" -> "(0, 4)__stay__(0, 4)"  [weight="1.0"];
"(0, 5)" -> "down__(0, 5)";
"(0, 5)" -> "left__(0, 5)";
"(0, 5)" -> "right__(0, 5)";
"(0, 5)" -> "stay__(0, 5)";
"down__(0, 5)" -> "(1, 5)__down__(0, 5)"  [weight="1.0"];
"left__(0, 5)" -> "(0, 4)__left__(0, 5)"  [weight=1];
"right__(0, 5)" -> "(0, 6)__right__(0, 5)"  [weight="1.0"];
"stay__(0, 5)" -> "(0, 5)__stay__(0, 5)"  [weight="1.0"];
"(0, 6)" -> "left__(0, 6)";
"(0, 6)" -> "right__(0, 6)";
"(0, 6)" -> "stay__(0, 6)";
"left__(0, 6)" -> "(0, 5)__left__(0, 6)"  [weight=1];
"right__(0, 6)" -> "(0, 7)__right__(0, 6)"  [weight="1.0"];
"stay__(0, 6)" -> "(0, 6)__stay__(0, 6)"  [weight="1.0"];
"(1, 5)" -> "up__(1, 5)";
"(1, 5)" -> "down__(1, 5)";
"(1, 5)" -> "stay__(1, 5)";
"up__(1, 5)" -> "(0, 5)__up__(1, 5)"  [weight="1.0"];
"down__(1, 5)" -> "(2, 5)__down__(1, 5)"  [weight="1.0"];
"stay__(1, 5)" -> "(1, 5)__stay__(1, 5)"  [weight=1];
"(0, 7)" -> "left__(0, 7)";
"(0, 7)" -> "right__(0, 7)";
"(0, 7)" -> "stay__(0, 7)";
"left__(0, 7)" -> "(0, 6)__left__(0, 7)"  [weight=1];
"right__(0, 7)" -> "(0, 8)__right__(0, 7)"  [weight="1.0"];
"stay__(0, 7)" -> "(0, 7)__stay__(0, 7)"  [weight="1.0"];
"(2, 5)" -> "up__(2, 5)";
"(2, 5)" -> "down__(2, 5)";
"(2, 5)" -> "stay__(2, 5)";
"up__(2, 5)" -> "(1, 5)__up__(2, 5)"  [weight="1.0"];
"down__(2, 5)" -> "(3, 5)__down__(2, 5)"  [weight="1.0"];
"stay__(2, 5)" -> "(2, 5)__stay__(2, 5)"  [weight=1];
"(0, 8)" -> "left__(0, 8)";
"(0, 8)" -> "right__(0, 8)";
"(0, 8)" -> "stay__(0, 8)";
"left__(0, 8)" -> "(0, 7)__left__(0, 8)"  [weight=1];
"right__(0, 8)" -> "(0, 9)__right__(0, 8)"  [weight="1.0"];
"stay__(0, 8)" -> "(0, 8)__stay__(0, 8)"  [weight="1.0"];
"(0, 9)" -> "left__(0, 9)";
"(0, 9)" -> "stay__(0, 9)";
"left__(0, 9)" -> "(0, 8)__left__(0, 9)"  [weight=1];
"stay__(0, 9)" -> "(0, 9)__stay__(0, 9)"  [weight="1.0"];
"(3, 0)" -> "up__(3, 0)";
"(3, 0)" -> "down__(3, 0)";
"(3, 0)" -> "right__(3, 0)";
"(3, 0)" -> "stay__(3, 0)";
"up__(3, 0)" -> "(2, 0)__up__(3, 0)"  [weight="1.0"];
"down__(3, 0)" -> "(4, 0)__down__(3, 0)"  [weight="1.0"];
"right__(3, 0)" -> "(3, 1)__right__(3, 0)"  [weight="1.0"];
"stay__(3, 0)" -> "(3, 0)__stay__(3, 0)"  [weight=1];
"(3, 5)" -> "up__(3, 5)";
"(3, 5)" -> "down__(3, 5)";
"(3, 5)" -> "left__(3, 5)";
"(3, 5)" -> "stay__(3, 5)";
"up__(3, 5)" -> "(2, 5)__up__(3, 5)"  [weight="1.0"];
"down__(3, 5)" -> "(4, 5)__down__(3, 5)"  [weight="1.0"];
"left__(3, 5)" -> "(3, 4)__left__(3, 5)"  [weight=1];
"stay__(3, 5)" -> "(3, 5)__stay__(3, 5)"  [weight="1.0"];
"(3, 1)" -> "left__(3, 1)";
"(3, 1)" -> "right__(3, 1)";
"(3, 1)" -> "stay__(3, 1)";
"left__(3, 1)" -> "(3, 0)__left__(3, 1)"  [weight=1];
"right__(3, 1)" -> "(3, 2)__right__(3, 1)"  [weight="1.0"];
"stay__(3, 1)" -> "(3, 1)__stay__(3, 1)"  [weight="1.0"];
"(4, 0)" -> "up__(4, 0)";
"(4, 0)" -> "down__(4, 0)";
"(4, 0)" -> "stay__(4, 0)";
"up__(4, 0)" -> "(3, 0)__up__(4, 0)"  [weight="1.0"];
"down__(4, 0)" -> "(5, 0)__down__(4, 0)"  [weight="1.0"];
"stay__(4, 0)" -> "(4, 0)__stay__(4, 0)"  [weight=1];
"(3, 2)" -> "down__(3, 2)";
"(3, 2)" -> "left__(3, 2)";
"(3, 2)" -> "right__(3, 2)";
"(3, 2)" -> "stay__(3, 2)";
"down__(3, 2)" -> "(4, 2)__down__(3, 2)"  [weight="1.0"];
"left__(3, 2)" -> "(3, 1)__left__(3, 2)"  [weight=1];
"right__(3, 2)" -> "(3, 3)__right__(3, 2)"  [weight="1.0"];
"stay__(3, 2)" -> "(3, 2)__stay__(3, 2)"  [weight="1.0"];
"(3, 3)" -> "left__(3, 3)";
"(3, 3)" -> "right__(3, 3)";
"(3, 3)" -> "stay__(3, 3)";
"left__(3, 3)" -> "(3, 2)__left__(3, 3)"  [weight=1];
"right__(3, 3)" -> "(3, 4)__right__(3, 3)"  [weight="1.0"];
"stay__(3, 3)" -> "(3, 3)__stay__(3, 3)"  [weight="1.0"];
"(4, 2)" -> "up__(4, 2)";
"(4, 2)" -> "down__(4, 2)";
"(4, 2)" -> "stay__(4, 2)";
"up__(4, 2)" -> "(3, 2)__up__(4, 2)"  [weight="1.0"];
"down__(4, 2)" -> "(5, 2)__down__(4, 2)"  [weight="1.0"];
"stay__(4, 2)" -> "(4, 2)__stay__(4, 2)"  [weight=1];
"(3, 4)" -> "left__(3, 4)";
"(3, 4)" -> "right__(3, 4)";
"(3, 4)" -> "stay__(3, 4)";
"left__(3, 4)" -> "(3, 3)__left__(3, 4)"  [weight=1];
"right__(3, 4)" -> "(3, 5)__right__(3, 4)"  [weight="1.0"];
"stay__(3, 4)" -> "(3, 4)__stay__(3, 4)"  [weight="1.0"];
"(4, 5)" -> "up__(4, 5)";
"(4, 5)" -> "down__(4, 5)";
"(4, 5)" -> "right__(4, 5)";
"(4, 5)" -> "stay__(4, 5)";
"up__(4, 5)" -> "(3, 5)__up__(4, 5)"  [weight="1.0"];
"down__(4, 5)" -> "(5, 5)__down__(4, 5)"  [weight="1.0"];
"right__(4, 5)" -> "(4, 6)__right__(4, 5)"  [weight="1.0"];
"stay__(4, 5)" -> "(4, 5)__stay__(4, 5)"  [weight=1];
"(4, 6)" -> "left__(4, 6)";
"(4, 6)" -> "right__(4, 6)";
"(4, 6)" -> "stay__(4, 6)";
"left__(4, 6)" -> "(4, 5)__left__(4, 6)"  [weight=1];
"right__(4, 6)" -> "(4, 7)__right__(4, 6)"  [weight="1.0"];
"stay__(4, 6)" -> "(4, 6)__stay__(4, 6)"  [weight="1.0"];
"(4, 7)" -> "left__(4, 7)";
"(4, 7)" -> "right__(4, 7)";
"(4, 7)" -> "stay__(4, 7)";
"left__(4, 7)" -> "(4, 6)__left__(4, 7)"  [weight=1];
"right__(4, 7)" -> "(4, 8)__right__(4, 7)"  [weight="1.0"];
"stay__(4, 7)" -> "(4, 7)__stay__(4, 7)"  [weight="1.0"];
"(4, 8)" -> "down__(4, 8)";
"(4, 8)" -> "left__(4, 8)";
"(4, 8)" -> "stay__(4, 8)";
"down__(4, 8)" -> "(5, 8)__down__(4, 8)"  [weight="1.0"];
"left__(4, 8)" -> "(4, 7)__left__(4, 8)"  [weight=1];
"stay__(4, 8)" -> "(4, 8)__stay__(4, 8)"  [weight="1.0"];
"(5, 0)" -> "up__(5, 0)";
"(5, 0)" -> "down__(5, 0)";
"(5, 0)" -> "stay__(5, 0)";
"up__(5, 0)" -> "(4, 0)__up__(5, 0)"  [weight="1.0"];
"down__(5, 0)" -> "(6, 0)__down__(5, 0)"  [weight="1.0"];
"stay__(5, 0)" -> "(5, 0)__stay__(5, 0)"  [weight=1];
"(5, 2)" -> "up__(5, 2)";
"(5, 2)" -> "down__(5, 2)";
"(5, 2)" -> "stay__(5, 2)";
"up__(5, 2)" -> "(4, 2)__up__(5, 2)"  [weight="1.0"];
"down__(5, 2)" -> "(6, 2)__down__(5, 2)"  [weight="1.0"];
"stay__(5, 2)" -> "(5, 2)__stay__(5, 2)"  [weight=1];
"(5, 5)" -> "up__(5, 5)";
"(5, 5)" -> "down__(5, 5)";
"(5, 5)" -> "stay__(5, 5)";
"up__(5, 5)" -> "(4, 5)__up__(5, 5)"  [weight="1.0"];
"down__(5, 5)" -> "(6, 5)__down__(5, 5)"  [weight="1.0"];
"stay__(5, 5)" -> "(5, 5)__stay__(5, 5)"  [weight=1];
"(5, 8)" -> "up__(5, 8)";
"(5, 8)" -> "down__(5, 8)";
"(5, 8)" -> "stay__(5, 8)";
"up__(5, 8)" -> "(4, 8)__up__(5, 8)"  [weight="1.0"];
"down__(5, 8)" -> "(6, 8)__down__(5, 8)"  [weight="1.0"];
"stay__(5, 8)" -> "(5, 8)__stay__(5, 8)"  [weight=1];
"(6, 0)" -> "up__(6, 0)";
"(6, 0)" -> "down__(6, 0)";
"(6, 0)" -> "stay__(6, 0)";
"up__(6, 0)" -> "(5, 0)__up__(6, 0)"  [weight="1.0"];
"down__(6, 0)" -> "(7, 0)__down__(6, 0)"  [weight="1.0"];
"stay__(6, 0)" -> "(6, 0)__stay__(6, 0)"  [weight=1];
"(6, 2)" -> "up__(6, 2)";
"(6, 2)" -> "down__(6, 2)";
"(6, 2)" -> "stay__(6, 2)";
"up__(6, 2)" -> "(5, 2)__up__(6, 2)"  [weight="1.0"];
"down__(6, 2)" -> "(7, 2)__down__(6, 2)"  [weight="1.0"];
"stay__(6, 2)" -> "(6, 2)__stay__(6, 2)"  [weight=1];
"(6, 5)" -> "up__(6, 5)";
"(6, 5)" -> "down__(6, 5)";
"(6, 5)" -> "right__(6, 5)";
"(6, 5)" -> "stay__(6, 5)";
"up__(6, 5)" -> "(5, 5)__up__(6, 5)"  [weight="1.0"];
"down__(6, 5)" -> "(7, 5)__down__(6, 5)"  [weight="1.0"];
"right__(6, 5)" -> "(6, 6)__right__(6, 5)"  [weight="1.0"];
"stay__(6, 5)" -> "(6, 5)__stay__(6, 5)"  [weight=1];
"(6, 6)" -> "left__(6, 6)";
"(6, 6)" -> "right__(6, 6)";
"(6, 6)" -> "stay__(6, 6)";
"left__(6, 6)" -> "(6, 5)__left__(6, 6)"  [weight=1];
"right__(6, 6)" -> "(6, 7)__right__(6, 6)"  [weight="1.0"];
"stay__(6, 6)" -> "(6, 6)__stay__(6, 6)"  [weight="1.0"];
"(6, 7)" -> "left__(6, 7)";
"(6, 7)" -> "right__(6, 7)";
"(6, 7)" -> "stay__(6, 7)";
"left__(6, 7)" -> "(6, 6)__left__(6, 7)"  [weight=1];
"right__(6, 7)" -> "(6, 8)__right__(6, 7)"  [weight="1.0"];
"stay__(6, 7)" -> "(6, 7)__stay__(6, 7)"  [weight="1.0"];
"(6, 8)" -> "up__(6, 8)";
"(6, 8)" -> "down__(6, 8)";
"(6, 8)" -> "left__(6, 8)";
"(6, 8)" -> "stay__(6, 8)";
"up__(6, 8)" -> "(5, 8)__up__(6, 8)"  [weight="1.0"];
"down__(6, 8)" -> "(7, 8)__down__(6, 8)"  [weight="1.0"];
"left__(6, 8)" -> "(6, 7)__left__(6, 8)"  [weight=1];
"stay__(6, 8)" -> "(6, 8)__stay__(6, 8)"  [weight="1.0"];
"(7, 0)" -> "up__(7, 0)";
"(7, 0)" -> "down__(7, 0)";
"(7, 0)" -> "stay__(7, 0)";
"up__(7, 0)" -> "(6, 0)__up__(7, 0)"  [weight="1.0"];
"down__(7, 0)" -> "(8, 0)__down__(7, 0)"  [weight="1.0"];
"stay__(7, 0)" -> "(7, 0)__stay__(7, 0)"  [weight=1];
"(7, 2)" -> "up__(7, 2)";
"(7, 2)" -> "down__(7, 2)";
"(7, 2)" -> "stay__(7, 2)";
"up__(7, 2)" -> "(6, 2)__up__(7, 2)"  [weight="1.0"];
"down__(7, 2)" -> "(8, 2)__down__(7, 2)"  [weight="1.0"];
"stay__(7, 2)" -> "(7, 2)__stay__(7, 2)"  [weight=1];
"(7, 5)" -> "up__(7, 5)";
"(7, 5)" -> "down__(7, 5)";
"(7, 5)" -> "stay__(7, 5)";
"up__(7, 5)" -> "(6, 5)__up__(7, 5)"  [weight="1.0"];
"down__(7, 5)" -> "(8, 5)__down__(7, 5)"  [weight="1.0"];
"stay__(7, 5)" -> "(7, 5)__stay__(7, 5)"  [weight=1];
"(7, 8)" -> "up__(7, 8)";
"(7, 8)" -> "down__(7, 8)";
"(7, 8)" -> "stay__(7, 8)";
"up__(7, 8)" -> "(6, 8)__up__(7, 8)"  [weight="1.0"];
"down__(7, 8)" -> "(8, 8)__down__(7, 8)"  [weight="1.0"];
"stay__(7, 8)" -> "(7, 8)__stay__(7, 8)"  [weight=1];
"(8, 0)" -> "up__(8, 0)";
"(8, 0)" -> "down__(8, 0)";
"(8, 0)" -> "stay__(8, 0)";
"up__(8, 0)" -> "(7, 0)__up__(8, 0)"  [weight="1.0"];
"down__(8, 0)" -> "(9, 0)__down__(8, 0)"  [weight="1.0"];
"stay__(8, 0)" -> "(8, 0)__stay__(8, 0)"  [weight=1];
"(8, 2)" -> "up__(8, 2)";
"(8, 2)" -> "down__(8, 2)";
"(8, 2)" -> "stay__(8, 2)";
"up__(8, 2)" -> "(7, 2)__up__(8, 2)"  [weight="1.0"];
"down__(8, 2)" -> "(9, 2)__down__(8, 2)"  [weight="1.0"];
"stay__(8, 2)" -> "(8, 2)__stay__(8, 2)"  [weight=1];
"(8, 5)" -> "up__(8, 5)";
"(8, 5)" -> "down__(8, 5)";
"(8, 5)" -> "right__(8, 5)";
"(8, 5)" -> "stay__(8, 5)";
"up__(8, 5)" -> "(7, 5)__up__(8, 5)"  [weight="1.0"];
"down__(8, 5)" -> "(9, 5)__down__(8, 5)"  [weight="1.0"];
"right__(8, 5)" -> "(8, 6)__right__(8, 5)"  [weight="1.0"];
"stay__(8, 5)" -> "(8, 5)__stay__(8, 5)"  [weight=1];
"(8, 6)" -> "left__(8, 6)";
"(8, 6)" -> "right__(8, 6)";
"(8, 6)" -> "stay__(8, 6)";
"left__(8, 6)" -> "(8, 5)__left__(8, 6)"  [weight=1];
"right__(8, 6)" -> "(8, 7)__right__(8, 6)"  [weight="1.0"];
"stay__(8, 6)" -> "(8, 6)__stay__(8, 6)"  [weight="1.0"];
"(8, 7)" -> "left__(8, 7)";
"(8, 7)" -> "right__(8, 7)";
"(8, 7)" -> "stay__(8, 7)";
"left__(8, 7)" -> "(8, 6)__left__(8, 7)"  [weight=1];
"right__(8, 7)" -> "(8, 8)__right__(8, 7)"  [weight="1.0"];
"stay__(8, 7)" -> "(8, 7)__stay__(8, 7)"  [weight="1.0"];
"(8, 8)" -> "up__(8, 8)";
"(8, 8)" -> "down__(8, 8)";
"(8, 8)" -> "left__(8, 8)";
"(8, 8)" -> "stay__(8, 8)";
"up__(8, 8)" -> "(7, 8)__up__(8, 8)"  [weight="1.0"];
"down__(8, 8)" -> "(9, 8)__down__(8, 8)"  [weight="1.0"];
"left__(8, 8)" -> "(8, 7)__left__(8, 8)"  [weight=1];
"stay__(8, 8)" -> "(8, 8)__stay__(8, 8)"  [weight="1.0"];
"(9, 0)" -> "up__(9, 0)";
"(9, 0)" -> "right__(9, 0)";
"(9, 0)" -> "stay__(9, 0)";
"up__(9, 0)" -> "(8, 0)__up__(9, 0)"  [weight="1.0"];
"right__(9, 0)" -> "(9, 1)__right__(9, 0)"  [weight="1.0"];
"stay__(9, 0)" -> "(9, 0)__stay__(9, 0)"  [weight=1];
"(9, 1)" -> "left__(9, 1)";
"(9, 1)" -> "right__(9, 1)";
"(9, 1)" -> "stay__(9, 1)";
"left__(9, 1)" -> "(9, 0)__left__(9, 1)"  [weight=1];
"right__(9, 1)" -> "(9, 2)__right__(9, 1)"  [weight="1.0"];
"stay__(9, 1)" -> "(9, 1)__stay__(9, 1)"  [weight="1.0"];
"(9, 2)" -> "up__(9, 2)";
"(9, 2)" -> "left__(9, 2)";
"(9, 2)" -> "right__(9, 2)";
"(9, 2)" -> "stay__(9, 2)";
"up__(9, 2)" -> "(8, 2)__up__(9, 2)"  [weight="1.0"];
"left__(9, 2)" -> "(9, 1)__left__(9, 2)"  [weight=1];
"right__(9, 2)" -> "(9, 3)__right__(9, 2)"  [weight="1.0"];
"stay__(9, 2)" -> "(9, 2)__stay__(9, 2)"  [weight="1.0"];
"(9, 3)" -> "left__(9, 3)";
"(9, 3)" -> "right__(9, 3)";
"(9, 3)" -> "stay__(9, 3)";
"left__(9, 3)" -> "(9, 2)__left__(9, 3)"  [weight=1];
"right__(9, 3)" -> "(9, 4)__right__(9, 3)"  [weight="1.0"];
"stay__(9, 3)" -> "(9, 3)__stay__(9, 3)"  [weight="1.0"];
"(9, 4)" -> "left__(9, 4)";
"(9, 4)" -> "right__(9, 4)";
"(9, 4)" -> "stay__(9, 4)";
"left__(9, 4)" -> "(9, 3)__left__(9, 4)"  [weight=1];
"right__(9, 4)" -> "(9, 5)__right__(9, 4)"  [weight="1.0"];
"stay__(9, 4)" -> "(9, 4)__stay__(9, 4)"  [weight="1.0"];
"(9, 5)" -> "up__(9, 5)";
"(9, 5)" -> "left__(9, 5)";
"(9, 5)" -> "stay__(9, 5)";
"up__(9, 5)" -> "(8, 5)__up__(9, 5)"  [weight="1.0"];
"left__(9, 5)" -> "(9, 4)__left__(9, 5)"  [weight=1];
"stay__(9, 5)" -> "(9, 5)__stay__(9, 5)"  [weight="1.0"];
"(9, 8)" -> "up__(9, 8)";
"(9, 8)" -> "stay__(9, 8)";
"up__(9, 8)" -> "(8, 8)__up__(9, 8)"  [weight="1.0"];
"stay__(9, 8)" -> "(9, 8)__stay__(9, 8)"  [weight=1];
}
